/*! 
 * Nova Creator Bootstrap Datagrid v1.0.0 - 06/23/2016
 * Copyright (c) 2015-2016 Nova Creator Software (https://github.com/NovaCreatorSoftware/bootstrap-data-grid)
 * Licensed under MIT http://www.opensource.org/licenses/MIT
 */
!function(a,b,c){/*jshint validthis: true */
"use strict";
// GRID INTERNAL FUNCTIONS
// =====================
// it only does '%s', and return '' when arguments are undefined
function d(a){var b=arguments,c=!0,d=1;return a=a.replace(/%s/g,function(){var a=b[d++];return"undefined"==typeof a?(c=!1,""):a}),c?a:""}function e(){Object.keys||(Object.keys=function(){var a=Object.prototype.hasOwnProperty,b=!{toString:null}.propertyIsEnumerable("toString"),c=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],d=c.length;return function(e){if("object"!=typeof e&&("function"!=typeof e||null===e))throw new TypeError("Object.keys called on non-object");var f=[];for(var g in e)a.call(e,g)&&f.push(g);if(b)for(var h=0;d>h;h++)a.call(e,c[h])&&f.push(c[h]);return f}}())}function f(a){function b(b){return c.identifier&&b[c.identifier]===a[c.identifier]}var c=this;return this.rows.contains(b)?!1:(this.rows.push(a),!0)}function g(b){return a.merge(this.footer?this.footer.find(b):a(),this.header?this.header.find(b):a())}function h(b){return b?a.extend({},this.cachedParams,{ctx:b}):this.cachedParams}function i(){var b={current:this.current,rowCount:this.rowCount,sort:this.sortDictionary,searchPhrase:this.searchPhrase},c=this.options.post;return c=a.isFunction(c)?c():c,this.options.requestHandler(a.extend(!0,b,c))}function j(b){return"."+a.trim(b).replace(/\s+/gm,".")}function k(){var b=this.options.url;return a.isFunction(b)?b():b}function l(a){this.options.highlightRows}function m(a){return a.visible}function n(){var b=this,c=this.$element.find("thead > tr").first(),d=!1;c.children().each(function(){var c=a(this),e=c.data(),f=a.extend({},e,{id:e.columnId,field:e.columnId,identifier:null==b.identifier&&e.identifier||!1,converter:b.options.converters[e.converter||e.type]||b.options.converters.string,text:c.text(),align:e.align||"left",headerAlign:e.headerAlign||"left",cssClass:e.cssClass||"",headerCssClass:e.headerCssClass||"",formatter:b.options.formatters[e.formatter]||null,order:d||"asc"!==e.order&&"desc"!==e.order?null:e.order,searchable:e.searchable!==!1,// default: true
sortable:e.sortable!==!1,// default: true
visible:e.visible!==!1,// default: true
visibleInSelection:e.visibleInSelection!==!1,// default: true
width:a.isNumeric(e.width)?e.width+"px":"string"==typeof e.width?e.width:null});b.columns.push(f),null!=f.order&&(b.sortDictionary[f.id]=f.order),
// Prevents multiple identifiers
f.identifier&&(b.identifier=f.id,b.converter=f.converter),
// ensures that only the first order will be applied in case of multi sorting is disabled
b.options.multiSort||null===f.order||(d=!0)})}function o(){if(0!==this.options.navigation){var b=j(this.options.css.infos),c=g.call(this,b);if(c.length>0){var d=this.current*this.rowCount,e=a(this.options.templates.infos.resolve(h.call(this,{end:0===this.total||-1===d||d>this.total?this.total:d,start:0===this.total?0:d-this.rowCount+1,total:this.total})));I.call(this,c,e)}}}function p(){var a=this.$element.children("tbody").first(),b=this.options.templates,c=this.columns.where(m).length;this.selection&&c++,a.html(b.noResults.resolve(h.call(this,{columns:c})))}function q(a){this.total=a,this.totalPages=-1===this.rowCount?1:Math.ceil(this.total/this.rowCount)}function r(b,c,d,e){var f=this,g=this.options.templates,i=this.options.css,k=h.call(this,{css:e,text:d,page:c}),l=a(g.paginationItem.resolve(k)).on("click"+O,j(i.paginationButton),function(b){b.stopPropagation(),b.preventDefault();var c=a(this),d=c.parent();if(!d.hasClass("active")&&!d.hasClass("disabled")){var e={first:1,prev:f.current-1,next:f.current+1,last:f.totalPages},g=c.data("page");f.current=e[g]||g,t.call(f)}c.trigger("blur")});return b.append(l),l}function s(){if(0!==this.options.navigation){var b=j(this.options.css.pagination),c=g.call(this,b)._mcmShowAria(-1!==this.rowCount);if(-1!==this.rowCount&&c.length>0){var d=this.options.templates,e=this.current,f=this.totalPages,i=a(d.pagination.resolve(h.call(this))),k=f-e,l=-1*(this.options.padding-e),m=k>=this.options.padding?Math.max(l,1):Math.max(l-this.options.padding+k,1),n=2*this.options.padding+1,o=f>=n?n:f;r.call(this,i,"first","&laquo;","first")._mcmEnableAria(e>1),r.call(this,i,"prev","&lt;","prev")._mcmEnableAria(e>1);for(var p=0;o>p;p++){var q=p+m;r.call(this,i,q,q,"page-"+q)._mcmEnableAria()._mcmSelectAria(q===e)}0===o&&r.call(this,i,1,1,"page-1")._mcmEnableAria(!1)._mcmSelectAria(),r.call(this,i,"next","&gt;","next")._mcmEnableAria(f>e),r.call(this,i,"last","&raquo;","last")._mcmEnableAria(f>e),I.call(this,c,i)}}}function t(){function c(a){for(var b=new RegExp(f.searchPhrase,f.options.caseSensitive?"g":"gi"),c=0;c<f.columns.length;c++){var d=f.columns[c],e=d.converter.to(a[d.id]);if(d.searchable&&d.visible&&e.search(b)>-1)return!0}return!1}function d(a){for(var b=0;b<f.columns.length;b++){var c=f.columns[b],d=c.converter.to(a[c.id]);if(c.showFilter){var e=new RegExp(c.filterValue,f.options.caseSensitive?"g":"gi");if(d.search(e)<=-1)return!1}}return!0}function e(a,b){f.currentRows=a,q.call(f,b),f.options.keepSelection||(f.selectedRows=[]),B.call(f,a),o.call(f),s.call(f),f.$element._mcmBusyAria(!1).trigger("loaded"+O)}// jshint ignore:line
var f=this;if(this.$element._mcmBusyAria(!0).trigger("load"+O),J.call(this),this.options.ajax){var g=i.call(this),h=k.call(this);if(null==h||"string"!=typeof h||0===h.length)throw new Error("Url setting must be a none empty string or a function that returns one.");
// aborts the previous ajax request if not already finished or failed
this.xqr&&this.xqr.abort();var j={url:h,data:g,success:function(b){f.xqr=null,"string"==typeof b&&(b=a.parseJSON(b)),b=f.options.responseHandler(b),f.current=b.current,e(b.rows,b.total)},error:function(a,b,c){f.xqr=null,"abort"!==b&&(p.call(f),// overrides loading mask
f.$element._mcmBusyAria(!1).trigger("loaded"+O))}};j=a.extend(this.options.ajaxSettings,j),this.xqr=a.ajax(j)}else{var l=this.searchPhrase.length>0?this.rows.where(c):this.rows;l=l.where(d);var m=l.length;-1!==this.rowCount&&(l=l.page(this.current,this.rowCount)),
// todo: improve the following comment
// setTimeout decouples the initialization so that adding event handlers happens before
b.setTimeout(function(){e(l,m)},10)}}function u(a,b){return"asc"===a?b:-1*b}function v(){function a(c,d,e){e=e||0;var f=e+1,g=b[e];return c[g.id]>d[g.id]?u(g.order,1):c[g.id]<d[g.id]?u(g.order,-1):b.length>f?a(c,d,f):0}var b=[];if(!this.options.ajax){for(var c in this.sortDictionary)(this.options.multiSort||0===b.length)&&b.push({id:c,order:this.sortDictionary[c]});b.length>0&&this.rows.sort(a)}}function w(){if(!this.options.ajax){var b=this,c=this.$element.find("tbody > tr");c.each(function(){var c=a(this),d=c.children("td"),e={};a.each(b.columns,function(a,b){e[b.id]=b.converter.from(d.eq(a).text())}),f.call(b,e)}),q.call(this,this.rows.length),v.call(this)}}function x(){var b=this.options.templates,c=this.$element.parent().hasClass(this.options.css.responsiveTable)?this.$element.parent():this.$element;this.$element.addClass(this.options.css.table),
// checks whether there is an tbody element; otherwise creates one
0===this.$element.children("tbody").length&&this.$element.append(b.body),1&this.options.navigation&&(this.header=a(b.header.resolve(h.call(this,{id:this.$element._mcmId()+"-header"}))),c.before(this.header)),2&this.options.navigation&&(this.footer=a(b.footer.resolve(h.call(this,{id:this.$element._mcmId()+"-footer"}))),c.after(this.footer))}function y(b){if(this.options.columnSelection&&this.columns.length>1){var c=this,d=this.options.css,e=this.options.templates,f=e.icon.resolve(h.call(this,{iconCss:d.iconColumns})),g=a(e.actionDropDown.resolve(h.call(this,{content:f}))),i=j(d.dropDownItem),k=j(d.dropDownItemCheckbox),l=j(d.dropDownMenuItems);a.each(this.columns,function(b,f){if(f.visibleInSelection){var n=a(e.actionDropDownCheckboxItem.resolve(h.call(c,{name:f.id,label:f.text,checked:f.visible}))).on("click"+O,i,function(b){b.stopPropagation();var d=a(this),e=d.find(k);if(!e.prop("disabled")){f.visible=e.prop("checked");var g=c.columns.where(m).length>1;d.parents(l).find(i+":has("+k+":checked)")._mcmEnableAria(g).find(k)._mcmEnableField(g),c.$element.find("tbody").empty(),// Fixes an column visualization bug
G.call(c),t.call(c)}});g.find(j(d.dropDownMenuItems)).append(n)}}),b.append(g)}}function z(a,b){return-1===a?b:a}function A(b){var c=this,d=c.options.locales.all,e=this.options.rowCount;if(a.isArray(e)){var f=this.options.css,g=this.options.templates,i=a(g.actionDropDown.resolve(h.call(this,{content:z(this.rowCount,d)}))),k=j(f.dropDownMenu),l=j(f.dropDownMenuText),m=j(f.dropDownMenuItems),n=j(f.dropDownItemButton);a.each(e,function(b,e){var f=a(g.actionDropDownItem.resolve(h.call(c,{text:z(e,d),action:e})))._mcmSelectAria(e===c.rowCount).on("click"+O,n,function(b){b.preventDefault();var e=a(this),f=e.data("action");f!==c.rowCount&&(
// todo: sophisticated solution needed for calculating which page is selected
c.current=1,// that.rowCount === -1 ---> All
c.rowCount=f,e.parents(m).children().each(function(){var b=a(this),c=b.find(n).data("action");b._mcmSelectAria(c===f)}),e.parents(k).find(l).text(z(f,d)),t.call(c))});i.find(m).append(f)}),b.append(i)}}function B(b){// jshint ignore:line
if(b.length>0){var c=this,d=this.options.css,e=this.options.templates,f=this.$element.children("tbody").first(),g=!0,i="";a.each(b,function(b,f){var j="",k=' data-row-id="'+(null==c.identifier?b:f[c.identifier])+'"',l="";if(c.selection){var m=-1!==a.inArray(f[c.identifier],c.selectedRows),n=e.select.resolve(h.call(c,{type:"checkbox",value:f[c.identifier],checked:m}));j+=e.cell.resolve(h.call(c,{content:n,css:d.selectCell,style:"selectCellTdStyle"})),g=g&&m,m&&(l+=d.selected,k+=' aria-selected="true"')}var o=null!=f.status&&c.options.statusMapping[f.status];o&&(l+=o),a.each(c.columns,function(b,g){if(g.visible){var i=a.isFunction(g.formatter)?g.formatter.call(c,g,f):g.converter.to(f[g.id]),k=g.cssClass.length>0?" "+g.cssClass:"";j+=e.cell.resolve(h.call(c,{content:null==i||""===i?"&nbsp;":i,css:("right"===g.align?d.right:"center"===g.align?d.center:d.left)+k,style:null==g.width?"":"width:"+g.width+";"}))}}),l.length>0&&(k+=' class="'+l+'"'),i+=e.row.resolve(h.call(c,{attr:k,cells:j}))}),
// sets or clears multi selectbox state
c.$element.find("thead "+j(c.options.css.selectBox)).prop("checked",g),f.html(i),C.call(this,f),this.afterRowsRendered()}else p.call(this)}function C(b){// jshint ignore:line
var c=this,d=j(this.options.css.selectBox);this.selection&&b.off("click"+O,d).on("click"+O,d,function(b){b.stopPropagation();var d=a(this),e=c.converter.from(d.val());d.prop("checked")?c.select([e]):c.deselect([e])}),b.off("click"+O,"> tr").on("click"+O,"> tr",function(b){if(a(b.target).is("td")){//don't trigger on links and stuff
b.stopPropagation();var d=a(this),e=null==c.identifier?d.data("row-id"):c.converter.from(d.data("row-id")+""),f=null==c.identifier?c.currentRows[e]:c.currentRows.first(function(a){return a[c.identifier]===e});c.selection&&c.options.rowSelect&&(d.hasClass(c.options.css.selected)?c.deselect([e]):c.select([e])),c.$element.trigger("click"+O,[c.columns,f])}})}function D(){if(0!==this.options.navigation){var b=this.options.css,c=g.call(this,j(b.actions)),d=this.options.templates;if(c.length>0){var e=this,f=a(d.actions.resolve(h.call(this)));
// Refresh Button
if(this.options.ajax){var i=d.icon.resolve(h.call(this,{iconCss:b.iconRefresh})),k=a(d.actionButton.resolve(h.call(this,{content:i,text:this.options.locales.refresh}))).on("click"+O,function(a){
// todo: prevent multiple fast clicks (fast click detection)
a.stopPropagation(),e.current=1,t.call(e)});f.append(k)}
// Row count selection
A.call(this,f),
// Column selection
y.call(this,f),I.call(this,c,f)}var l=g.call(this,j(b.extensions)),m=a(d.extensions.resolve(h.call(this)));I.call(this,l,m),this.initExtensionsToolbar()}}function E(){if(0!==this.options.navigation){var c=this.options.css,d=j(c.search),e=g.call(this,d);if(e.length>0){var f=this,i=this.options.templates,k=null,l="",m=j(c.searchField),n=a(i.search.resolve(h.call(this))),o=n.is(m)?n:n.find(m);o.on("keyup"+O,function(c){c.stopPropagation();var d=a(this).val();(l!==d||13===c.which&&""!==d)&&(l=d,(13===c.which||0===d.length||d.length>=f.options.searchSettings.characters)&&(b.clearTimeout(k),k=b.setTimeout(function(){F.call(f,d)},f.options.searchSettings.delay)))}),I.call(this,e,n)}}}function F(a){// jshint ignore:line
this.searchPhrase!==a&&(this.current=1,this.searchPhrase=a,t.call(this))}function G(){// jshint ignore:line
var b=this,c=this.$element.find("thead > tr"),d=this.options.css,e=this.options.templates,f="",g=this.options.sorting;if(this.selection){var i=this.options.multiSelect?e.select.resolve(h.call(b,{type:"checkbox",value:"all"})):"";f+=e.rawHeaderCell.resolve(h.call(b,{content:i,css:d.selectCell,style:"selectCellThStyle"}))}if(a.each(this.columns,function(a,c){if(c.visible){var i=b.sortDictionary[c.id],j=g&&i&&"asc"===i?d.iconUp:g&&i&&"desc"===i?d.iconDown:"",k=e.icon.resolve(h.call(b,{iconCss:j})),l=c.headerAlign,m=c.headerCssClass.length>0?" "+c.headerCssClass:"";f+=e.headerCell.resolve(h.call(b,{column:c,icon:k,sortable:g&&c.sortable&&d.sortable||"",css:("right"===l?d.right:"center"===l?d.center:d.left)+m,style:null==c.width?"":"width:"+c.width+";"}))}}),c.html(f),g){var k=j(d.sortable);c.off("click"+O,k).on("click"+O,k,function(c){c.preventDefault(),H.call(b,a(this)),v.call(b),t.call(b)})}
// todo: create a own function for that piece of code
if(this.selection&&this.options.multiSelect){var l=j(d.selectBox);c.off("click"+O,l).on("click"+O,l,function(c){c.stopPropagation(),a(this).prop("checked")?b.select():b.deselect()})}this.initHeader()}function H(a){// jshint ignore:line
var b=this.options.css,c=j(b.icon),d=a.data("column-id")||a.parents("th").first().data("column-id"),e=this.sortDictionary[d],f=a.find(c);if(this.options.multiSort||(a.parents("tr").first().find(c).removeClass(b.iconDown+" "+b.iconUp),this.sortDictionary={}),e&&"asc"===e)this.sortDictionary[d]="desc",f.removeClass(b.iconUp).addClass(b.iconDown);else if(e&&"desc"===e)if(this.options.multiSort){var g={};for(var h in this.sortDictionary)h!==d&&(g[h]=this.sortDictionary[h]);this.sortDictionary=g,f.removeClass(b.iconDown)}else this.sortDictionary[d]="asc",f.removeClass(b.iconDown).addClass(b.iconUp);else this.sortDictionary[d]="asc",f.addClass(b.iconUp)}function I(b,c){// jshint ignore:line
b.each(function(b,d){
// todo: check how append is implemented. Perhaps cloning here is superfluous.
a(d).before(c.clone(!0)).remove()})}function J(){// jshint ignore:line
var a=this;b.setTimeout(function(){if("true"===a.$element._mcmAria("busy")){var b=a.options.templates,c=a.$element.children("thead").first(),d=a.$element.children("tbody").first(),e=d.find("tr > td").first(),f=a.$element.height()-c.height()-(e.height()+20),g=a.columns.where(m).length;a.selection&&(g+=1),d.html(b.loading.resolve(h.call(a,{columns:g}))),-1!==a.rowCount&&f>0&&d.find("tr > td").css("padding","20px 0 "+f+"px")}},250)}function K(){return!!(navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./))}function L(b,c){var d=-1;return a.each(b,function(a,b){return b.field===c?(d=a,!1):!0}),d}function M(){this.$element.trigger("initialize"+O),n.call(this),// Loads columns from HTML thead tag
this.selection=this.options.selection&&null!=this.identifier,w.call(this),// Loads rows from HTML tbody tag if ajax is false
x.call(this),G.call(this),E.call(this),D.call(this),t.call(this),this.initExtension(),this.$element.trigger("initialized"+O)}if(
// GRID COMMON TYPE EXTENSIONS
// ============
a.fn.extend({_mcmAria:function(a,b){return b?this.attr("aria-"+a,b):this.attr("aria-"+a)},_mcmBusyAria:function(a){return null==a||a?this._mcmAria("busy","true"):this._mcmAria("busy","false")},_mcmRemoveAria:function(a){return this.removeAttr("aria-"+a)},_mcmEnableAria:function(a){return null==a||a?this.removeClass("disabled")._mcmAria("disabled","false"):this.addClass("disabled")._mcmAria("disabled","true")},_mcmEnableField:function(a){return null==a||a?this.removeAttr("disabled"):this.attr("disabled","disable")},_mcmShowAria:function(a){return null==a||a?this.show()._mcmAria("hidden","false"):this.hide()._mcmAria("hidden","true")},_mcmSelectAria:function(a){return null==a||a?this.addClass("active")._mcmAria("selected","true"):this.removeClass("active")._mcmAria("selected","false")},_mcmId:function(a){return a?this.attr("id",a):this.attr("id")}}),!String.prototype.resolve){var N={checked:function(a){return"boolean"==typeof a?a?'checked="checked"':"":a}};String.prototype.resolve=function(b,c){var d=this;return a.each(b,function(b,e){if(null!=e&&"function"!=typeof e)if("object"==typeof e){var f=c?a.extend([],c):[];f.push(b),d=d.resolve(e,f)+""}else{N&&N[b]&&"function"==typeof N[b]&&(e=N[b](e)),b=c?c.join(".")+"."+b:b;var g=new RegExp("\\{\\{"+b+"\\}\\}","gm");d=d.replace(g,e.replace?e.replace(/\$/gi,"&#36;"):e)}}),d}}Array.prototype.first||(Array.prototype.first=function(a){for(var b=0;b<this.length;b++){var c=this[b];if(a(c))return c}return null}),Array.prototype.contains||(Array.prototype.contains=function(a){for(var b=0;b<this.length;b++){var c=this[b];if(a(c))return!0}return!1}),Array.prototype.page||(Array.prototype.page=function(a,b){var c=(a-1)*b,d=c+b;return this.length>c?this.length>d?this.slice(c,d):this.slice(c):[]}),Array.prototype.where||(Array.prototype.where=function(a){for(var b=[],c=0;c<this.length;c++){var d=this[c];a(d)&&b.push(d)}return b}),Array.prototype.propValues||(Array.prototype.propValues=function(a){for(var b=[],c=0;c<this.length;c++)b.push(this[c][a]);return b});
// GRID INTERNAL FIELDS
// ====================
var O=".rs.novacreator.bootstrap.datagrid",P=function(b,c){this.$element=a(b),this.origin=this.$element.clone(),this.options=a.extend(!0,{},P.defaults,this.$element.data(),c),
// overrides rowCount explicitly because deep copy ($.extend) leads to strange behaviour
this.options.rowCount=this.$element.data().rowCount||c.rowCount||this.options.rowCount,this.columns=[],this.rowCount=a.isArray(this.options.rowCount)?this.options.rowCount[0]:this.options.rowCount,this.rows=[],this.current=1,this.currentRows=[],this.identifier=null,// The first column ID that is marked as identifier
this.selection=!1,this.converter=null,// The converter for the column that is marked as identifier
this.searchPhrase="",this.selectedRows=[],this.sortDictionary={},this.total=0,this.totalPages=0,this.cachedParams={lbl:this.options.locales,css:this.options.css,ctx:{}},this.header=null,this.footer=null,this.xqr=null,this.initLocale()};/**
 * An object that represents the default settings.
 *
 * @static
 * @class defaults
 * @for Grid
 * @example
 *   // Global approach
 *   $.tablear.defaults.selection = true;
 * @example
 *   // Initialization approach
 *   $("#tablear").tablear({ selection = true });
 **/
P.defaults={navigation:3,// it's a flag: 0 = none, 1 = top, 2 = bottom, 3 = both (top and bottom)
padding:2,// page padding (pagination)
columnSelection:!0,rowCount:[10,25,50,-1],// rows per page int or array of int (-1 represents "All")
/**
     * Enables row selection (to enable multi selection see also `multiSelect`). Default value is `false`.
     *
     * @property selection
     * @type Boolean
     * @default false
     * @for defaults
     * @since 1.0.0
     **/
selection:!1,/**
     * Enables multi selection (`selection` must be set to `true` as well). Default value is `false`.
     *
     * @property multiSelect
     * @type Boolean
     * @default false
     * @for defaults
     * @since 1.0.0
     **/
multiSelect:!1,/**
     * Enables entire row click selection (`selection` must be set to `true` as well). Default value is `false`.
     *
     * @property rowSelect
     * @type Boolean
     * @default false
     * @for defaults
     * @since 1.0.0
     **/
rowSelect:!1,/**
     * Defines whether the row selection is saved internally on filtering, paging and sorting
     * (even if the selected rows are not visible).
     *
     * @property keepSelection
     * @type Boolean
     * @default false
     * @for defaults
     * @since 1.0.0
     **/
keepSelection:!1,highlightRows:!1,// highlights new rows (find the page of the first new row)
sorting:!0,multiSort:!1,/**
     * General search settings to configure the search field behaviour.
     *
     * @property searchSettings
     * @type Object
     * @for defaults
     * @since 1.0.0
     **/
searchSettings:{/**
         * The time in milliseconds to wait before search gets executed.
         *
         * @property delay
         * @type Number
         * @default 250
         * @for searchSettings
         **/
delay:250,/**
         * The characters to type before the search gets executed.
         *
         * @property characters
         * @type Number
         * @default 1
         * @for searchSettings
         **/
characters:1},/**
     * Defines whether the data shall be loaded via an asynchronous HTTP (Ajax) request.
     *
     * @property ajax
     * @type Boolean
     * @default false
     * @for defaults
     **/
ajax:!1,/**
     * Ajax request settings that shall be used for server-side communication.
     * All setting except data, error, success and url can be overridden.
     * For the full list of settings go to http://api.jquery.com/jQuery.ajax/.
     *
     * @property ajaxSettings
     * @type Object
     * @for defaults
     * @since 1.0.0
     **/
ajaxSettings:{/**
         * Specifies the HTTP method which shall be used when sending data to the server.
         * Go to http://api.jquery.com/jQuery.ajax/ for more details.
         * This setting is overriden for backward compatibility.
         *
         * @property method
         * @type String
         * @default "POST"
         * @for ajaxSettings
         **/
method:"POST"},/**
     * Enriches the request object with additional properties. Either a `PlainObject` or a `Function`
     * that returns a `PlainObject` can be passed. Default value is `{}`.
     *
     * @property post
     * @type Object|Function
     * @default function (request) { return request; }
     * @for defaults
     * @deprecated Use instead `requestHandler`
     **/
post:{},// or use function () { return {}; } (reserved properties are "current", "rowCount", "sort" and "searchPhrase")
/**
     * Sets the data URL to a data service (e.g. a REST service). Either a `String` or a `Function`
     * that returns a `String` can be passed. Default value is `""`.
     *
     * @property url
     * @type String|Function
     * @default ""
     * @for defaults
     **/
url:"",// or use function () { return ""; }
/**
     * Defines whether the search is case sensitive or insensitive.
     *
     * @property caseSensitive
     * @type Boolean
     * @default true
     * @for defaults
     * @since 1.0.0
     **/
caseSensitive:!0,
// note: The following properties should not be used via data-api attributes
/**
     * Transforms the JSON request object in whatever is needed on the server-side implementation.
     *
     * @property requestHandler
     * @type Function
     * @default function (request) { return request; }
     * @for defaults
     * @since 1.0.0
     **/
requestHandler:function(a){return a},/**
     * Transforms the response object into the expected JSON response object.
     *
     * @property responseHandler
     * @type Function
     * @default function (response) { return response; }
     * @for defaults
     * @since 1.0.0
     **/
responseHandler:function(a){return a},/**
     * A list of converters.
     *
     * @property converters
     * @type Object
     * @for defaults
     * @since 1.0.0
     **/
converters:{numeric:{from:function(a){return+a},// converts from string to numeric
to:function(a){return a+""}},string:{
// default converter
from:function(a){return a},to:function(a){return a}}},/**
     * Contains all css classes.
     *
     * @property css
     * @type Object
     * @for defaults
     **/
css:{actions:"actions btn-group",// must be a unique class name or constellation of class names within the header and footer
extensions:"extensions btn-group",center:"text-center",columnHeaderAnchor:"column-header-anchor",// must be a unique class name or constellation of class names within the column header cell
columnHeaderText:"text",dropDownItem:"dropdown-item",// must be a unique class name or constellation of class names within the actionDropDown,
dropDownItemButton:"dropdown-item-button",// must be a unique class name or constellation of class names within the actionDropDown
dropDownItemCheckbox:"dropdown-item-checkbox",// must be a unique class name or constellation of class names within the actionDropDown
dropDownMenu:"dropdown btn-group",// must be a unique class name or constellation of class names within the actionDropDown
dropDownMenuItems:"dropdown-menu pull-right",// must be a unique class name or constellation of class names within the actionDropDown
dropDownMenuText:"dropdown-text",// must be a unique class name or constellation of class names within the actionDropDown
footer:"tablear-footer container-fluid",header:"tablear-header container-fluid",icon:"icon glyphicon",iconColumns:"glyphicon-th-list",iconDown:"glyphicon-chevron-down",iconRefresh:"glyphicon-refresh",iconSearch:"glyphicon-search",iconUp:"glyphicon-chevron-up",infos:"infos",// must be a unique class name or constellation of class names within the header and footer,
left:"text-left",pagination:"pagination",// must be a unique class name or constellation of class names within the header and footer
paginationButton:"button",// must be a unique class name or constellation of class names within the pagination
iconToggle:"glyphicon-list-alt icon-list-alt",iconDetailOpen:"glyphicon-plus icon-plus",iconDetailClose:"glyphicon-minus icon-minus",iconSize:c,/**
         * CSS class to select the parent div which activates responsive mode.
         *
         * @property responsiveTable
         * @type String
         * @default "table-responsive"
         * @for css
         * @since 1.0.0
         **/
responsiveTable:"table-responsive",right:"text-right",search:"search form-group",// must be a unique class name or constellation of class names within the header and footer
searchField:"search-field form-control",selectBox:"select-box",// must be a unique class name or constellation of class names within the entire table
selectCell:"select-cell",// must be a unique class name or constellation of class names within the entire table
/**
         * CSS class to highlight selected rows.
         *
         * @property selected
         * @type String
         * @default "active"
         * @for css
         * @since 1.0.0
         **/
selected:"active",sortable:"sortable",table:"tablear-table table"},/**
     * A dictionary of formatters.
     *
     * @property formatters
     * @type Object
     * @for defaults
     * @since 1.0.0
     **/
formatters:{},/**
     * Specifies the mapping between status and contextual classes to color rows.
     *
     * @property statusMapping
     * @type Object
     * @for defaults
     * @since 1.0.0
     **/
statusMapping:{/**
         * Specifies a successful or positive action.
         *
         * @property 0
         * @type String
         * @for statusMapping
         **/
0:"success",/**
         * Specifies a neutral informative change or action.
         *
         * @property 1
         * @type String
         * @for statusMapping
         **/
1:"info",/**
         * Specifies a warning that might need attention.
         *
         * @property 2
         * @type String
         * @for statusMapping
         **/
2:"warning",/**
         * Specifies a dangerous or potentially negative action.
         *
         * @property 3
         * @type String
         * @for statusMapping
         **/
3:"danger"},locales:{},/**
     * Contains all templates.
     *
     * @property templates
     * @type Object
     * @for defaults
     **/
templates:{actionButton:'<button class="btn btn-default" type="button" title="{{ctx.text}}">{{ctx.content}}</button>',actionDropDown:'<div class="{{css.dropDownMenu}}"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown"><span class="{{css.dropDownMenuText}}">{{ctx.content}}</span> <span class="caret"></span></button><ul class="{{css.dropDownMenuItems}}" role="menu"></ul></div>',actionDropDownItem:'<li><a data-action="{{ctx.action}}" class="{{css.dropDownItem}} {{css.dropDownItemButton}}">{{ctx.text}}</a></li>',actionDropDownCheckboxItem:'<li><label class="{{css.dropDownItem}}"><input name="{{ctx.name}}" type="checkbox" value="1" class="{{css.dropDownItemCheckbox}}" {{ctx.checked}} /> {{ctx.label}}</label></li>',actions:'<div class="{{css.actions}}"></div>',extensions:'<div class="{{css.extensions}}"></div>',body:"<tbody></tbody>",cell:'<td class="{{ctx.css}}" style="{{ctx.style}}">{{ctx.content}}</td>',footer:'<div id="{{ctx.id}}" class="{{css.footer}}"><div class="row"><div class="col-sm-6"><p class="{{css.pagination}}"></p></div><div class="col-sm-6 infoBar"><p class="{{css.infos}}"></p></div></div></div>',header:'<div id="{{ctx.id}}" class="{{css.header}}"><div class="row"><div class="col-sm-12 actionBar"><p class="{{css.search}}"></p><p class="{{css.actions}}"></p><p class="{{css.extensions}}"></p></div></div></div>',headerCell:'<th data-column-id="{{ctx.column.id}}" class="{{ctx.css}}" style="{{ctx.style}}"><a href="javascript:void(0);" class="{{css.columnHeaderAnchor}} {{ctx.sortable}}"><span class="{{css.columnHeaderText}}">{{ctx.column.text}}</span>{{ctx.icon}}</a></th>',icon:'<span class="{{css.icon}} {{ctx.iconCss}}"></span>',infos:'<div class="{{css.infos}}">{{lbl.infos}}</div>',loading:'<tr><td colspan="{{ctx.columns}}" class="loading">{{lbl.loading}}</td></tr>',noResults:'<tr><td colspan="{{ctx.columns}}" class="no-results">{{lbl.noResults}}</td></tr>',pagination:'<ul class="{{css.pagination}}"></ul>',paginationItem:'<li class="{{ctx.css}}"><a data-page="{{ctx.page}}" class="{{css.paginationButton}}">{{ctx.text}}</a></li>',rawHeaderCell:'<th class="{{ctx.css}}">{{ctx.content}}</th>',// Used for the multi select box
row:"<tr{{ctx.attr}}>{{ctx.cells}}</tr>",search:'<div class="{{css.search}}"><div class="input-group"><span class="{{css.icon}} input-group-addon {{css.iconSearch}}"></span> <input type="text" class="{{css.searchField}}" placeholder="{{lbl.search}}" /></div></div>',select:'<input name="select" type="{{ctx.type}}" class="{{css.selectBox}}" value="{{ctx.value}}" {{ctx.checked}} />'}},P.locales=[],P.locales["en-US"]=P.locales.en={all:"All",infos:"Showing {{ctx.start}} to {{ctx.end}} of {{ctx.total}} entries",loading:"Loading...",noResults:"No results found!",refresh:"Refresh",search:"Search"},a.extend(P.defaults.locales,P.locales["en-US"]),P.prototype.initLocale=function(){if(this.options.locale){var b=this.options.locale.split(/-|_/);b[0]=b[0].toLowerCase(),b[1]=b[1]&&b[1].toUpperCase(),this.locales[this.options.locale]?
// locale as requested
a.extend(this.options,this.locales[this.options.locale]):this.locales[b.join("-")]?
// locale with sep set to - (in case original was specified with _)
a.extend(this.options,this.locales[b.join("-")]):this.locales[b[0]]&&
// short locale language code (i.e. 'en')
a.extend(this.options,this.locales[b[0]])}},
//to be extended by the extension
P.prototype.initExtension=function(){},P.prototype.afterRowsRendered=function(){},P.prototype.initExtensionsToolbar=function(){this.$extensionsToolbar=a(".extensions.btn-group")},P.prototype.initHeader=function(){this.$actionBar=a(".actionBar"),this.$header=a("thead")},/**
 * Appends rows.
 *
 * @method append
 * @param rows {Array} An array of rows to append
 * @chainable
 **/
P.prototype.append=function(a){if(this.options.ajax);else{for(var b=[],c=0;c<a.length;c++)f.call(this,a[c])&&// jshint ignore:line
b.push(a[c]);v.call(this),// jshint ignore:line
l.call(this,b),// jshint ignore:line
t.call(this),// jshint ignore:line
this.$element.trigger("appended"+O,[b])}return this},/**
 * Removes all rows.
 *
 * @method clear
 * @chainable
 **/
P.prototype.clear=function(){if(this.options.ajax);else{var b=a.extend([],this.rows);this.rows=[],this.current=1,this.total=0,t.call(this),// jshint ignore:line
this.$element.trigger("cleared"+O,[b])}return this},/**
 * Removes the control functionality completely and transforms the current state to the initial HTML structure.
 *
 * @method destroy
 * @chainable
 **/
P.prototype.destroy=function(){// jshint ignore:line
return a(b).off(O),1&this.options.navigation&&this.header.remove(),2&this.options.navigation&&this.footer.remove(),this.$element.before(this.origin).remove(),this},/**
 * Resets the state and reloads rows.
 *
 * @method reload
 * @chainable
 **/
P.prototype.reload=function(){// jshint ignore:line
// reset
return this.current=1,t.call(this),this},/**
 * Removes rows by ids. Removes selected rows if no ids are provided.
 *
 * @method remove
 * @param [rowsIds] {Array} An array of rows ids to remove
 * @chainable
 **/
P.prototype.remove=function(a){if(null!=this.identifier){if(this.options.ajax);else{a=a||this.selectedRows;for(var b,c=[],d=0;d<a.length;d++){b=a[d];for(var e=0;e<this.rows.length;e++)if(this.rows[e][this.identifier]===b){c.push(this.rows[e]),this.rows.splice(e,1);break}}this.current=1,// reset
t.call(this),// jshint ignore:line
this.$element.trigger("removed"+O,[c])}}return this},/**
 * Searches in all rows for a specific phrase (but only in visible cells). 
 * The search filter will be reset if no argument is provided.
 *
 * @method search
 * @param [phrase] {String} The phrase to search for
 * @chainable
 **/
P.prototype.search=function(a){if(a=a||"",this.searchPhrase!==a){var b=j(this.options.css.searchField),c=g.call(this,b);// jshint ignore:line
c.val(a)}// jshint ignore:line
return F.call(this,a),this},/**
 * Selects rows by ids. Selects all visible rows if no ids are provided.
 * In server-side scenarios only visible rows are selectable.
 *
 * @method select
 * @param [rowsIds] {Array} An array of rows ids to select
 * @chainable
 **/
P.prototype.select=function(b){if(this.selection){b=b||this.currentRows.propValues(this.identifier);for(var c,d,e=[];b.length>0&&(this.options.multiSelect||1!==e.length);)if(d=b.pop(),-1===a.inArray(d,this.selectedRows))for(c=0;c<this.currentRows.length;c++)if(this.currentRows[c][this.identifier]===d){e.push(this.currentRows[c]),this.selectedRows.push(d);break}if(e.length>0){var f=j(this.options.css.selectBox),g=this.selectedRows.length>=this.currentRows.length;for(c=0;!this.options.keepSelection&&g&&c<this.currentRows.length;)g=-1!==a.inArray(this.currentRows[c++][this.identifier],this.selectedRows);for(this.$element.find("thead "+f).prop("checked",g),this.options.multiSelect||this.$element.find("tbody > tr "+f+":checked").trigger("click"+O),c=0;c<this.selectedRows.length;c++)this.$element.find('tbody > tr[data-row-id="'+this.selectedRows[c]+'"]').addClass(this.options.css.selected)._mcmAria("selected","true").find(f).prop("checked",!0);this.$element.trigger("selected"+O,[e])}}return this},/**
 * Deselects rows by ids. Deselects all visible rows if no ids are provided.
 * In server-side scenarios only visible rows are deselectable.
 *
 * @method deselect
 * @param [rowsIds] {Array} An array of rows ids to deselect
 * @chainable
 **/
P.prototype.deselect=function(b){if(this.selection){b=b||this.currentRows.propValues(this.identifier);for(var c,d,e,f=[];b.length>0;)if(c=b.pop(),e=a.inArray(c,this.selectedRows),-1!==e)for(d=0;d<this.currentRows.length;d++)if(this.currentRows[d][this.identifier]===c){f.push(this.currentRows[d]),this.selectedRows.splice(e,1);break}if(f.length>0){var g=j(this.options.css.selectBox);for(// jshint ignore:line
this.$element.find("thead "+g).prop("checked",!1),d=0;d<f.length;d++)this.$element.find('tbody > tr[data-row-id="'+f[d][this.identifier]+'"]').removeClass(this.options.css.selected)._mcmAria("selected","false").find(g).prop("checked",!1);this.$element.trigger("deselected"+O,[f])}}return this},/**
 * Sorts the rows by a given sort descriptor dictionary. 
 * The sort filter will be reseted, if no argument is provided.
 *
 * @method sort
 * @param [dictionary] {Object} A sort descriptor dictionary that contains the sort information
 * @chainable
 **/
P.prototype.sort=function(b){var c=b?a.extend({},b):{};// jshint ignore:line
// jshint ignore:line
return c===this.sortDictionary?this:(this.sortDictionary=c,G.call(this),v.call(this),t.call(this),this)},/**
 * Gets a list of the column settings.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getColumnSettings
 * @return {Array} Returns a list of the column settings.
 * @since 1.0.0
 **/
P.prototype.getColumnSettings=function(){return a.merge([],this.columns)},/**
 * Gets the current page index.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getCurrentPage
 * @return {Number} Returns the current page index.
 * @since 1.0.0
 **/
P.prototype.getCurrentPage=function(){return this.current},/**
 * Gets the current rows.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getCurrentPage
 * @return {Array} Returns the current rows.
 * @since 1.0.0
 **/
P.prototype.getCurrentRows=function(){return a.merge([],this.currentRows)},/**
 * Gets a number represents the row count per page.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getRowCount
 * @return {Number} Returns the row count per page.
 * @since 1.0.0
 **/
P.prototype.getRowCount=function(){return this.rowCount},/**
 * Gets the actual search phrase.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getSearchPhrase
 * @return {String} Returns the actual search phrase.
 * @since 1.0.0
 **/
P.prototype.getSearchPhrase=function(){return this.searchPhrase},/**
 * Gets the complete list of currently selected rows.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getSelectedRows
 * @return {Array} Returns all selected rows.
 * @since 1.0.0
 **/
P.prototype.getSelectedRows=function(){return a.merge([],this.selectedRows)},/**
 * Gets the sort dictionary which represents the state of column sorting.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getSortDictionary
 * @return {Object} Returns the sort dictionary.
 * @since 1.0.0
 **/
P.prototype.getSortDictionary=function(){return a.extend({},this.sortDictionary)},/**
 * Gets a number represents the total page count.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getTotalPageCount
 * @return {Number} Returns the total page count.
 * @since 1.0.0
 **/
P.prototype.getTotalPageCount=function(){return this.totalPages},P.prototype.getColumnById=function(b){var c,d=this;return a.each(d.columns,function(a,d){return d.id===b?(c=d,!1):void 0}),c},P.prototype.getRowById=function(b){var c,d=this;return a.each(d.rows,function(a,d){return d.id===b?(c=d,!1):void 0}),c},/**
 * Gets a number represents the total row count.
 * This method returns only for the first grid instance a value.
 * Therefore be sure that only one grid instance is catched by your selector.
 *
 * @method getTotalRowCount
 * @return {Number} Returns the total row count.
 * @since 1.0.0
 **/
P.prototype.getTotalRowCount=function(){return this.total};
// GRID PLUGIN DEFINITION
// =====================
var Q=a.fn.tablear;a.fn.tablear=function(b){var c=Array.prototype.slice.call(arguments,1),d=null,e=this.each(function(e){var f=a(this),g=f.data(O),h="object"==typeof b&&b;if((g||"destroy"!==b)&&(g||(f.data(O,g=new P(this,h)),// jshint ignore:line
M.call(g)),"string"==typeof b))if(0===b.indexOf("get")&&0===e)d=g[b].apply(g,c);else if(0!==b.indexOf("get"))return g[b].apply(g,c)});return"string"==typeof b&&0===b.indexOf("get")?d:e},
//to easily access the Grid object. It's a convention
a.fn.tablear.Constructor=P,// jshint ignore:line
a.fn.tablear.defaults=P.defaults,// jshint ignore:line
a.fn.tablear.locales=P.locales,// jshint ignore:line
// GRID NO CONFLICT
// ===============
a.fn.tablear.noConflict=function(){return a.fn.tablear=Q,this},
// GRID DATA-API
// ============
a('[data-toggle="tablear"]').tablear(),/**
 * Nova Creator Boostrap Data Grid Extension: editable
 *
 */
function(a){// jshint ignore:line
a.extend(a.fn.tablear.Constructor.defaults,{editable:!0,onEditableInit:function(){return!1},onEditableSave:function(a,b,c,d){return!1},onEditableShown:function(a,b,c,d){return!1},onEditableHidden:function(a,b,c,d){return!1}}),a.extend(a.fn.tablear.Constructor.EVENTS,{"editable-init.bs.table":"onEditableInit","editable-save.bs.table":"onEditableSave","editable-shown.bs.table":"onEditableShown","editable-hidden.bs.table":"onEditableHidden"});var b=a.fn.tablear.Constructor.prototype.initExtension;a.fn.tablear.Constructor.prototype.initExtension=function(){var c=this;b.apply(this,Array.prototype.slice.apply(arguments)),this.options.editable&&a.each(this.columns,function(b,d){if(d.editable){var e={},f=[],g="editable-",h=function(a,b){
// Replace camel case with dashes.
var c=a.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()});if(c.slice(0,g.length)==g){var d=c.replace(g,"data-");e[d]=b}};a.each(c.options,h);d.formatter;d.formatter=function(b,c,g){
//var result = _formatter ? _formatter(value, row, index) : value;
var i=c[b.field];return a.each(d,h),a.each(e,function(a,b){f.push(" "+a+'="'+b+'"')}),['<a href="javascript:void(0)"',' data-name="'+d.field+'"',' data-pk="'+c.id+'"',' data-value="'+i+'"',f.join(""),"></a>"].join("")}}})};var c=a.fn.tablear.Constructor.prototype.afterRowsRendered;a.fn.tablear.Constructor.prototype.afterRowsRendered=function(){var b=this;c.apply(this,Array.prototype.slice.apply(arguments)),this.options.editable&&a.each(this.columns,function(c,d){d.editable&&(b.$element.find('a[data-name="'+d.field+'"]').editable(d.editable).off("save").on("save",b,function(b,c){var d=b.data,e=a(b.currentTarget).data("name"),f=(d.getColumnById(e),d.getRowById(a(b.currentTarget).data("pk")));a(this).data("value",c.submitValue),f[e]=c.submitValue}),b.$element.find('a[data-name="'+d.field+'"]').editable(d.editable).off("shown").on("shown",b,function(a,b){}),b.$element.find('a[data-name="'+d.field+'"]').editable(d.editable).off("hidden").on("hidden",b,function(a,b){}))})}}(jQuery),/**
 * Nova Creator Boostrap Data Grid Extension: exporter
 *
 */
function(a){// jshint ignore:line
var b={json:"JSON",xml:"XML",png:"PNG",csv:"CSV",txt:"TXT",sql:"SQL",doc:"MS-Word",excel:"MS-Excel",powerpoint:"MS-Powerpoint",pdf:"PDF"};a.extend(a.fn.tablear.Constructor.defaults,{showExport:!1,exportDataType:"basic",// basic, all, selected
// 'json', 'xml', 'png', 'csv', 'txt', 'sql', 'doc', 'excel', 'powerpoint', 'pdf'
exportTypes:["json","xml","csv","txt","sql","excel"],exportOptions:{}}),a.extend(a.fn.tablear.Constructor.defaults.css,{exportIcon:"glyphicon-export icon-share"}),a.extend(a.fn.tablear.Constructor.locales,{formatExport:function(){return"Export data"}}),a.extend(a.fn.tablear.Constructor.defaults.locales,a.fn.tablear.Constructor.locales);var c=a.fn.tablear.Constructor.prototype.initExtensionsToolbar;a.fn.tablear.Constructor.prototype.initExtensionsToolbar=function(){if(this.showToolbar=this.options.showExport,c.apply(this,Array.prototype.slice.apply(arguments)),this.options.showExport){var e=this,f=this.$extensionsToolbar.find("div.export");if(!f.length){f=a(['<div class="export btn-group">','<button class="btn btn-default'+d(" btn-%s",this.options.css.iconSize)+' dropdown-toggle" title="'+this.options.locales.formatExport()+'" data-toggle="dropdown" type="button">',d('<i class="%s %s"></i> ',this.options.css.icon,this.options.css.exportIcon),'<span class="caret"></span>',"</button>",'<ul class="dropdown-menu" role="menu">',"</ul>","</div>"].join("")).appendTo(this.$extensionsToolbar);var g=f.find(".dropdown-menu"),h=this.options.exportTypes;if("string"==typeof this.options.exportTypes){var i=this.options.exportTypes.slice(1,-1).replace(/ /g,"").split(",");h=[],a.each(i,function(a,b){h.push(b.slice(1,-1))})}a.each(h,function(a,c){b.hasOwnProperty(c)&&g.append(['<li data-type="'+c+'">','<a href="javascript:void(0)">',b[c],"</a>","</li>"].join(""))}),g.find("li").click(function(){var b=a(this).data("type"),c=function(){e.$element.tableExport(a.extend({},e.options.exportOptions,{type:b,escape:!1}))};if("all"===e.options.exportDataType&&e.options.pagination)e.$element.one("server"===e.options.sidePagination?"post-body.bs.table":"page-change.bs.table",function(){c(),e.togglePagination()}),e.togglePagination();else if("selected"===e.options.exportDataType){var d=e.getData(),f=e.getAllSelections();e.load(f),c(),e.load(d)}else c()})}}}}(jQuery),/**
 * Nova Creator Boostrap Data Grid Extension: filters
 *
 */
function(a){// jshint ignore:line
var f=function(b,c,d){c=a.trim(c),b=a(b.get(b.length-1)),h(b,c)||b.append(a("<option></option>").attr("value",c).text(a("<div />").html(d).text()))},g=function(b){var c=b.find("option:gt(0)");c.sort(function(b,c){
// Convert numerical values from string to float.
return b=a(b).text().toLowerCase(),c=a(c).text().toLowerCase(),a.isNumeric(b)&&a.isNumeric(c)&&(b=parseFloat(b),c=parseFloat(c)),b>c?1:c>b?-1:0}),b.find("option:gt(0)").remove(),b.append(c)},h=function(a,b){for(var c=a.get(a.length-1).options,d=0;d<c.length;d++)if(c[d].value===b.toString())
//The value is not valid to add
return!0;
//If we get here, the value is valid to add
return!1},i=function(a){a.$tableHeader.css("height","77px")},j=function(a){var b=a.$header;return a.options.height&&(b=a.$tableHeader),b},k=function(a){var b="select, input";return a.options.height&&(b="table select, table input"),b},l=function(b){if(K()){if(a(b).is("input")){var c=0;if("selectionStart"in b)c=b.selectionStart;else if("selection"in document){b.focus();var d=document.selection.createRange(),e=document.selection.createRange().text.length;d.moveStart("character",-b.value.length),c=d.text.length-e}return c}return-1}return-1},m=function(b,d){K()&&(b.setSelectionRange!==c?b.setSelectionRange(d,d):a(b).val(b.value))},n=function(b){var c=j(b),d=k(b);b.options.valuesShowFilter=[],c.find(d).each(function(){b.options.valuesShowFilter.push({field:a(this).closest("[data-field]").data("field"),value:a(this).val(),position:l(a(this).get(0))})})},o=function(b){var c=null,d=[],e=j(b),f=k(b);b.options.valuesShowFilter.length>0&&e.find(f).each(function(e,f){c=a(this).closest("[data-field]").data("field"),d=a.grep(b.options.valuesShowFilter,function(a){return a.field===c}),d.length>0&&(a(this).val(d[0].value),m(a(this).get(0),d[0].position))})},p=function(){var b=[],c=document.cookie.match(/(?:bs.table.)(\w*)/g);return c?(a.each(c,function(c,d){/./.test(d)&&(d=d.split(".").pop()),-1===a.inArray(d,b)&&b.push(d)}),b):void 0},q=function(b){
//var data = that.options.data;
var d=(b.columns,function(a){return a.showFilter&&"select"===a.showFilter.toLowerCase()&&a.searchable}),e=function(a){return a.filterData===c||"column"===a.filterData.toLowerCase()},h=function(a){return a&&a.length>0};b.options.pagination?"server"===b.options.sidePagination?b.pageTo:b.options.totalRows:b.pageTo;b.header&&
//$.each(that.header.fields, function(j, field) {
a.each(b.columns,function(c,i){var j=a(".tablear-filter-control-"+r(i.field));if(d(i)&&e(i)&&h(j)){0===j.get(j.length-1).options.length&&
//Added the default option
f(j,"","");for(var k={},l=0;l<b.rows.length;l++){
//Added a new value
var m=b.rows[l][i.field];
//var formattedValue = calculateObjectValue(that.header, that.header.formatters[j], 
//  [ fieldValue, that.rows[i], i ], fieldValue);
//uniqueValues[formattedValue] = fieldValue;
k[m]=m}for(var n in k)f(j,k[n],n);g(j)}})},r=function(a){return String(a).replace(/(:|\.|\[|\]|,)/g,"\\$1")},s=function(d,e){var h,i,j=!1,k=0;a.each(d.columns,function(k,l){if(h="hidden",i=[],l.visible){if(l.showFilter){i.push('<div style="margin: 0 2px 2px 2px;" class="showFilter">');var m=l.showFilter.toLowerCase();l.searchable&&d.options.filterTemplate[m]&&(j=!0,h="visible",i.push(d.options.filterTemplate[m](d,l.field,h)))}else i.push('<div style="height: 34px;"></div>');if(a.each(e.children().children(),function(b,c){return c=a(c),c.data("columnId")===l.id?(c.append(i.join("")),!1):void 0}),l.filterData!==c&&"column"!==l.filterData.toLowerCase()){var n,o,p=w(v,l.filterData.substring(0,l.filterData.indexOf(":")));if(null===p)throw new SyntaxError('Error. You should use any of these allowed filter data methods: var, json, url. Use like this: var: {key: "value"}');n=l.filterData.substring(l.filterData.indexOf(":")+1,l.filterData.length),o=a(".tablear-filter-control-"+r(l.field)),f(o,"",""),p(n,o);var q,s;switch(p){case"url":a.ajax({url:n,dataType:"json",success:function(a){for(var b in a)f(o,b,a[b]);g(o)}});break;case"var":q=b[n];for(s in q)f(o,s,q[s]);g(o);break;case"json":q=JSON.parse(n);for(s in q)f(o,s,q[s]);g(o)}}}}),j?(e.off("keyup","input").on("keyup","input",function(a){clearTimeout(k),k=setTimeout(function(){d.onColumnSearch(a)},d.options.searchTimeOut)}),e.off("change","select").on("change","select",function(a){clearTimeout(k),k=setTimeout(function(){d.onColumnSearch(a)},d.options.searchTimeOut)}),e.off("mouseup","input").on("mouseup","input",function(b){var c=a(this),e=c.val();""!==e&&setTimeout(function(){var a=c.val();""===a&&(clearTimeout(k),k=setTimeout(function(){d.onColumnSearch(b)},d.options.searchTimeOut))},1)}),e.find(".date-filter-control").length>0&&a.each(d.columns,function(b,d){d.showFilter!==c&&"datepicker"===d.showFilter.toLowerCase()&&e.find(".date-filter-control.tablear-filter-control-"+d.field).datepicker(d.filterDatepickerOptions).on("changeDate",function(b){
//Fired the keyup event
a(b.currentTarget).keyup()})})):e.find(".showFilter").hide()},u=function(a){switch(a=a===c?"left":a.toLowerCase()){case"left":return"ltr";case"right":return"rtl";case"auto":return"auto";default:return"ltr"}},v={"var":function(a,c){var d=b[a];for(var e in d)f(c,e,d[e]);g(c)},url:function(b,c){a.ajax({url:b,dataType:"json",success:function(a){for(var b in a)f(c,b,a[b]);g(c)}})},json:function(a,b){var c=JSON.parse(a);for(var d in c)f(b,d,c[d]);g(b)}},w=function(a,b){for(var c=Object.keys(a),d=0;d<c.length;d++)if(c[d]===b)return a[b];return null};a.extend(a.fn.tablear.Constructor.defaults,{showFilter:!1,onColumnSearch:function(a,b){return!1},filterShowClear:!1,alignmentSelectControlOptions:c,filterTemplate:{input:function(a,b,c){return d('<input type="text" class="form-control tablear-filter-control tablear-filter-control-%s" style="width: 100%; visibility: %s">',b,c)},select:function(a,b,c){return d('<select class="form-control tablear-filter-control-%s" style="width: 100%; visibility: %s" dir="%s"></select>',b,c,u(a.options.alignmentSelectControlOptions))},datepicker:function(a,b,c){return d('<input type="text" class="form-control date-filter-control tablear-filter-control-%s" style="width: 100%; visibility: %s">',b,c)}},
//internal variables
valuesShowFilter:[]}),a.extend(a.fn.tablear.Constructor.columnDefaults,{showFilter:c,filterData:c,filterDatepickerOptions:c,filterStrictSearch:!1,filterStartsWithSearch:!1}),a.extend(a.fn.tablear.Constructor.EVENTS,{"column-search.bs.table":"onColumnSearch"}),a.extend(a.fn.tablear.Constructor.defaults.css,{clearFilter:"glyphicon-trash icon-clear"}),a.extend(a.fn.tablear.Constructor.locales,{formatClearFilters:function(){return"Clear Filters"}}),a.extend(a.fn.tablear.Constructor.defaults,a.fn.tablear.Constructor.locales);var x=a.fn.tablear.Constructor.prototype.init;a.fn.tablear.Constructor.prototype.init=function(){
//Make sure that the showFilter option is set
if(this.options.showFilter){var a=this;
// Compatibility: IE < 9 and old browsers
Object.keys||e(),
//Make sure that the internal variables are set correctly
this.options.valuesShowFilter=[],this.$element.on("reset-view.bs.table",function(){
//Create controls on $tableHeader if the height is set
a.options.height&&(
//Avoid recreate the controls
a.$tableHeader.find("select").length>0||a.$tableHeader.find("input").length>0||s(a,a.$tableHeader))}).on("post-header.bs.table",function(){o(a)}).on("post-body.bs.table",function(){a.options.height&&i(a)}).on("column-switch.bs.table",function(){o(a)})}x.apply(this,Array.prototype.slice.apply(arguments))};var y=a.fn.tablear.Constructor.prototype.initExtensionsToolbar;a.fn.tablear.Constructor.prototype.initExtensionsToolbar=function(){if(this.showToolbar=this.options.showFilter,y.apply(this,Array.prototype.slice.apply(arguments)),this.options.showFilter){var b=this.$extensionsToolbar,c=b.find(".filter-show-clear");c.length||(c=a(['<div class="filter btn-group">','<button class="btn btn-default filter-show-clear" ',d('type="button" title="%s">',this.options.formatClearFilters()),d('<i class="%s %s"></i> ',this.options.css.icon,this.options.css.clearFilter),"</button>","</div>"].join("")).appendTo(b),c.off("click").on("click",a.proxy(this.clearShowFilter,this)))}};var z=a.fn.tablear.Constructor.prototype.initHeader;a.fn.tablear.Constructor.prototype.initHeader=function(){z.apply(this,Array.prototype.slice.apply(arguments)),this.options.showFilter&&(s(this,this.$header),q(this))},a.fn.tablear.Constructor.prototype.onColumnSearch=function(b){if(!(a.inArray(b.keyCode,[37,38,39,40])>-1)){n(this),this.options.pageNumber=1,this.current=1;
//executeSearch.call(this, $.trim($(event.currentTarget).val()));
var c=this.getColumnById(a(b.currentTarget).parents("th").data("columnId"));c&&(c.filterValue=a.trim(a(b.currentTarget).val())),t.call(this)}},a.fn.tablear.Constructor.prototype.clearShowFilter=function(){if(this.options.showFilter){var b=this,e=p(),f=j(b),g=f.closest("table"),h=f.find(k(b)),i=0;if(a.each(b.options.valuesShowFilter,function(a,b){b.value=""}),o(b),a.each(b.columns,function(a,b){b.showFilter&&(b.filterValue="")}),!(h.length>0))return;
// use the default sort order if it exists. do nothing if it does not
if(a(h[0]).trigger("INPUT"===h[0].tagName?"keyup":"change"),b.$actionBar.find(".search-field").val(""),b.options.sortName!==g.data("sortName")||b.options.sortOrder!==g.data("sortOrder")){var l=f.find(d('[data-field="%s"]',a(h[0]).closest("table").data("sortName")));l.length>0&&(b.onSort(g.data("sortName"),g.data("sortName")),a(l).find(".sortable").trigger("click"))}
// clear cookies once the filters are clean
clearTimeout(i),i=setTimeout(function(){e&&e.length>0&&a.each(e,function(a,d){b.deleteCookie!==c&&b.deleteCookie(d)})},b.options.searchTimeOut)}}}(jQuery),/**
 * Nova Creator Boostrap Data Grid Extension: reorder-columns
 *
 */
function(a){// jshint ignore:line
a.extend(a.fn.tablear.Constructor.defaults,{reorderableColumns:!1,maxMovingRows:10,onReorderColumn:function(a){return!1},dragaccept:null}),a.extend(a.fn.tablear.Constructor.EVENTS,{"reorder-column.bs.table":"onReorderColumn"});var b=a.fn.tablear.Constructor.prototype.initHeader,c=a.fn.tablear.Constructor.prototype.toggleColumn,d=a.fn.tablear.Constructor.prototype.toggleView;a.fn.tablear.Constructor.prototype.resetView;a.fn.tablear.Constructor.prototype.initHeader=function(){b.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&this.makeColumnsReorderable()},a.fn.tablear.Constructor.prototype.toggleColumn=function(){c.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&this.makeColumnsReorderable()},a.fn.tablear.Constructor.prototype.toggleView=function(){d.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableColumns&&(this.options.cardView||this.makeColumnsReorderable())},a.fn.tablear.Constructor.prototype.resetView=function(){
// _resetView.apply(this, Array.prototype.slice.apply(arguments));
this.options.reorderableColumns&&this.makeColumnsReorderable()},a.fn.tablear.Constructor.prototype.makeColumnsReorderable=function(){var b=this;try{a(this.$element).dragtable("destroy")}catch(c){}a(this.$element).dragtable({maxMovingRows:b.options.maxMovingRows,dragaccept:b.options.dragaccept,clickDelay:200,beforeStop:function(){var c=[],d=[],e=[],f=[],g=-1;
//Exist columns not shown
if(b.$header.find("th").each(function(b){c.push(a(this).data("field")),d.push(a(this).data("formatter"))}),c.length<b.columns.length){f=a.grep(b.columns,function(a){return!a.visible});for(var h=0;h<f.length;h++)c.push(f[h].field),d.push(f[h].formatter)}for(var h=0;h<c.length;h++)g=L(b.columns,c[h]),-1!==g&&(e.push(b.columns[g]),b.columns.splice(g,1));b.columns=b.columns.concat(e),b.header.fields=c,b.header.formatters=d,b.resetView()}})}}(jQuery),/**
 * Nova Creator Boostrap Data Grid Extension: reorder-rows
 *
 */
function(a){// jshint ignore:line
var b=function(a,b){return{id:"customId_"+b}};a.extend(a.fn.tablear.Constructor.defaults,{reorderableRows:!1,onDragStyle:null,onDropStyle:null,onDragClass:"reorder_rows_onDragClass",dragHandle:null,useRowAttrFunc:!1,onReorderRowsDrag:function(a,b){return!1},onReorderRowsDrop:function(a,b){return!1},onReorderRow:function(a){return!1}}),a.extend(a.fn.tablear.Constructor.EVENTS,{"reorder-row.bs.table":"onReorderRow"});var c=a.fn.tablear.Constructor.prototype.initHeader,d=a.fn.tablear.Constructor.prototype.initSearch;a.fn.tablear.Constructor.prototype.initHeader=function(){if(c.apply(this,Array.prototype.slice.apply(arguments)),this.options.reorderableRows){var a=this;this.options.useRowAttrFunc&&(this.options.rowAttributes=b),setTimeout(function(){a.makeRowsReorderable()},100)}},a.fn.tablear.Constructor.prototype.initSearch=function(){d.apply(this,Array.prototype.slice.apply(arguments)),!this.options.reorderableRows},a.fn.tablear.Constructor.prototype.makeRowsReorderable=function(){var a=this;this.$element.tableDnD({onDragStyle:a.options.onDragStyle,onDropStyle:a.options.onDropStyle,onDragClass:a.options.onDragClass,onDrop:a.onDrop,onDragStart:a.options.onReorderRowsDrag,dragHandle:a.options.dragHandle})},a.fn.tablear.Constructor.prototype.onDrop=function(b,c){for(var d=a(b),e=d.data("bootstrap.table"),f=d.data("bootstrap.table").options,g=null,h=[],i=0;i<b.tBodies[0].rows.length;i++)g=a(b.tBodies[0].rows[i]),h.push(f.data[g.data("index")]),g.data("index",i).attr("data-index",i);f.data=h,
//Call the user defined function
f.onReorderRowsDrop.apply(b,[b,c]),
//Call the event reorder-row
e.trigger("reorder-row",h)}}(jQuery),/**
 * Nova Creator Boostrap Data Grid Extension: resizable
 *
 */
function(a){var b=function(a){
//Deletes the plugin to re-create it
a.$element.colResizable({disable:!0}),
//Creates the plugin
a.$element.colResizable({liveDrag:a.options.liveDrag,fixed:a.options.fixed,headerOnly:a.options.headerOnly,minWidth:a.options.minWidth,hoverCursor:a.options.hoverCursor,dragCursor:a.options.dragCursor,onResize:a.onResize,onDrag:a.options.onResizableDrag})};a.extend(a.fn.tablear.Constructor.defaults,{resizable:!1,liveDrag:!1,fixed:!0,headerOnly:!1,minWidth:15,hoverCursor:"e-resize",dragCursor:"e-resize",onResizableResize:function(a){return!1},onResizableDrag:function(a){return!1}});var c=a.fn.tablear.Constructor.prototype.initHeader;a.fn.tablear.Constructor.prototype.initHeader=function(){c.apply(this,Array.prototype.slice.apply(arguments));var a=this;this.options.resizable&&
// because in fitHeader function, we use setTimeout(func, 100);
setTimeout(function(){b(a)},100)}}(jQuery)}(jQuery,window);