{
    "project": {
        "name": "novacreator-bootstrap-data-grid",
        "description": "Data grid based on Bootstrap.",
        "version": "1.0.0",
        "url": "https://github.com/NovaCreatorSoftware/bootstrap-data-grid"
    },
    "files": {
        "dist/js/dependencies.js": {
            "name": "dist/js/dependencies.js",
            "modules": {},
            "classes": {
                "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in.": 1,
                "": 1,
                "editableform": 1,
                "editableContainer": 1,
                "editable": 1,
                "abstractinput": 1,
                "list": 1,
                "text": 1,
                "textarea": 1,
                "select": 1,
                "checklist": 1,
                "html5types": 1,
                "select2": 1,
                "combodate": 1,
                "date": 1,
                "datefield": 1,
                "datetime": 1,
                "datetimefield": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dist/js/novacreator.bootstrap.datagrid.js": {
            "name": "dist/js/novacreator.bootstrap.datagrid.js",
            "modules": {},
            "classes": {
                "Grid": 1,
                "defaults": 1
            },
            "fors": {
                "Grid": 1,
                "defaults": 1,
                "searchSettings": 1,
                "ajaxSettings": 1,
                "css": 1,
                "colorMapping": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in.": {
            "name": "fn",
            "shortname": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "dist/js/dependencies.js",
            "line": 30432,
            "description": "See (http://jquery.com/)",
            "memberof": "$"
        },
        "": {
            "file": "dist/js/dependencies.js",
            "line": 30736,
            "description": "Main TouchSwipe Plugin Class.\nDo not use this to construct your TouchSwipe object, use the jQuery plugin method $.fn.swipe(); {@link $.fn.swipe}",
            "see": [
                "$.fh.swipe.defaults",
                "$.fh.swipe"
            ],
            "params": [
                {
                    "name": "element",
                    "description": "The HTML DOM object to apply to plugin to",
                    "type": "DOMNode"
                },
                {
                    "name": "options",
                    "description": "The options to configure the plugin with.  @link {$.fn.swipe.defaults}",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "name": "TouchSwipe"
        },
        "editableform": {
            "name": "editableform",
            "shortname": "editableform",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "editableContainer"
            ],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 47001,
            "description": "Form with single input element, two buttons and two states: normal/loading.\nApplied as jQuery method to DIV tag (not to form tag!). This is because form can be in loading state when spinner shown.\nEditableform is linked with one of input types, e.g. 'text', 'select' etc.",
            "uses": [
                "text",
                "textarea"
            ]
        },
        "editableContainer": {
            "name": "editableContainer",
            "shortname": "editableContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "editable"
            ],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 47887,
            "description": "Attaches stand-alone container with editable-form to HTML element. Element is used only for positioning, value is not stored anywhere.<br>\nThis method applied internally in <code>$().editable()</code>. You should subscribe on it's events (save / cancel) to get profit of it.<br>\nFinal realization can be different: bootstrap-popover, jqueryui-tooltip, poshytip, inline-div. It depends on which js file you include.<br>\nApplied as jQuery method.",
            "uses": [
                "editableform"
            ]
        },
        "editable": {
            "name": "editable",
            "shortname": "editable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 48457,
            "description": "Makes editable any HTML element on the page. Applied as jQuery method.",
            "uses": [
                "editableContainer"
            ]
        },
        "abstractinput": {
            "name": "abstractinput",
            "shortname": "abstractinput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 49316,
            "description": "AbstractInput - base class for all editable inputs.\nIt defines interface to be implemented by any input type.\nTo create your own input you can inherit from this class."
        },
        "list": {
            "name": "list",
            "shortname": "list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 49537,
            "description": "List - abstract class for inputs that have source option loaded from js array or via ajax",
            "extends": "abstractinput"
        },
        "text": {
            "name": "text",
            "shortname": "text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "editableform"
            ],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 49873,
            "description": "Text input",
            "extends": "abstractinput",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"username\" data-type=\"text\" data-pk=\"1\">awesome</a>\n<script>\n$(function(){\n    $('#username').editable({\n        url: '/post',\n        title: 'Enter username'\n    });\n});\n</script>"
            ]
        },
        "textarea": {
            "name": "textarea",
            "shortname": "textarea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "editableform"
            ],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 50008,
            "description": "Textarea input",
            "extends": "abstractinput",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"comments\" data-type=\"textarea\" data-pk=\"1\">awesome comment!</a>\n<script>\n$(function(){\n    $('#comments').editable({\n        url: '/post',\n        title: 'Enter comments',\n        rows: 10\n    });\n});\n</script>"
            ]
        },
        "select": {
            "name": "select",
            "shortname": "select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 50120,
            "description": "Select (dropdown)",
            "extends": "list",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"status\" data-type=\"select\" data-pk=\"1\" data-url=\"/post\" data-title=\"Select status\"></a>\n<script>\n$(function(){\n    $('#status').editable({\n        value: 2,    \n        source: [\n              {value: 1, text: 'Active'},\n              {value: 2, text: 'Blocked'},\n              {value: 3, text: 'Deleted'}\n           ]\n    });\n});\n</script>"
            ]
        },
        "checklist": {
            "name": "checklist",
            "shortname": "checklist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 50217,
            "description": "List of checkboxes. \nInternally value stored as javascript array of values.",
            "extends": "list",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"options\" data-type=\"checklist\" data-pk=\"1\" data-url=\"/post\" data-title=\"Select options\"></a>\n<script>\n$(function(){\n    $('#options').editable({\n        value: [2, 3],    \n        source: [\n              {value: 1, text: 'option1'},\n              {value: 2, text: 'option2'},\n              {value: 3, text: 'option3'}\n           ]\n    });\n});\n</script>"
            ]
        },
        "html5types": {
            "name": "html5types",
            "shortname": "html5types",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 50374,
            "description": "HTML5 input types.\nFollowing types are supported:\n\n* password\n* email\n* url\n* tel\n* number\n* range\n* time\n\nLearn more about html5 inputs:  \nhttp://www.w3.org/wiki/HTML5_form_additions  \nTo check browser compatibility please see:  \nhttps://developer.mozilla.org/en-US/docs/HTML/Element/Input",
            "extends": "text",
            "final": 1,
            "since": "1.3.0",
            "example": [
                "\n<a href=\"#\" id=\"email\" data-type=\"email\" data-pk=\"1\">admin@example.com</a>\n<script>\n$(function(){\n    $('#email').editable({\n        url: '/post',\n        title: 'Enter email'\n    });\n});\n</script>"
            ]
        },
        "select2": {
            "name": "select2",
            "shortname": "select2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 50593,
            "description": "Select2 input. Based on amazing work of Igor Vaynberg https://github.com/ivaynberg/select2.  \nPlease see [original select2 docs](http://ivaynberg.github.com/select2) for detailed description and options.  \n \nYou should manually download and include select2 distributive:  \n\n    <link href=\"select2/select2.css\" rel=\"stylesheet\" type=\"text/css\"></link>  \n    <script src=\"select2/select2.js\"></script>  \n    \nTo make it **bootstrap-styled** you can use css from [here](https://github.com/t0m/select2-bootstrap-css): \n\n    <link href=\"select2-bootstrap.css\" rel=\"stylesheet\" type=\"text/css\"></link>    \n    \n**Note:** currently `autotext` feature does not work for select2 with `ajax` remote source.    \nYou need initially put both `data-value` and element's text youself:    \n\n    <a href=\"#\" data-type=\"select2\" data-value=\"1\">Text1</a>",
            "extends": "abstractinput",
            "since": "1.4.1",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"country\" data-type=\"select2\" data-pk=\"1\" data-value=\"ru\" data-url=\"/post\" data-title=\"Select country\"></a>\n<script>\n$(function(){\n    //local source\n    $('#country').editable({\n        source: [\n              {id: 'gb', text: 'Great Britain'},\n              {id: 'us', text: 'United States'},\n              {id: 'ru', text: 'Russia'}\n           ],\n        select2: {\n           multiple: true\n        }\n    });\n    //remote source (simple)\n    $('#country').editable({\n        source: '/getCountries',\n        select2: {\n            placeholder: 'Select Country',\n            minimumInputLength: 1\n        }\n    });\n    //remote source (advanced)\n    $('#country').editable({\n        select2: {\n            placeholder: 'Select Country',\n            allowClear: true,\n            minimumInputLength: 3,\n            id: function (item) {\n                return item.CountryId;\n            },\n            ajax: {\n                url: '/getCountries',\n                dataType: 'json',\n                data: function (term, page) {\n                    return { query: term };\n                },\n                results: function (data, page) {\n                    return { results: data };\n                }\n            },\n            formatResult: function (item) {\n                return item.CountryName;\n            },\n            formatSelection: function (item) {\n                return item.CountryName;\n            },\n            initSelection: function (element, callback) {\n                return $.get('/getCountryById', { query: element.val() }, function (data) {\n                    callback(data);\n                });\n            } \n        }  \n    });\n});\n</script>"
            ]
        },
        "combodate": {
            "name": "combodate",
            "shortname": "combodate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 51428,
            "description": "Combodate input - dropdown date and time picker.    \nBased on [combodate](http://vitalets.github.com/combodate) plugin (included). To use it you should manually include [momentjs](http://momentjs.com).\n\n    <script src=\"js/moment.min.js\"></script>\n   \nAllows to input:\n\n* only date\n* only time \n* both date and time  \n\nPlease note, that format is taken from momentjs and **not compatible** with bootstrap-datepicker / jquery UI datepicker.  \nInternally value stored as `momentjs` object.",
            "extends": "abstractinput",
            "final": 1,
            "since": "1.4.0",
            "example": [
                "\n<a href=\"#\" id=\"dob\" data-type=\"combodate\" data-pk=\"1\" data-url=\"/post\" data-value=\"1984-05-15\" data-title=\"Select date\"></a>\n<script>\n$(function(){\n    $('#dob').editable({\n        format: 'YYYY-MM-DD',    \n        viewformat: 'DD.MM.YYYY',    \n        template: 'D / MMMM / YYYY',    \n        combodate: {\n                minYear: 2000,\n                maxYear: 2015,\n                minuteStep: 1\n           }\n        }\n    });\n});\n</script>"
            ]
        },
        "date": {
            "name": "date",
            "shortname": "date",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 53172,
            "description": "Bootstrap-datepicker.  \nDescription and examples: https://github.com/eternicode/bootstrap-datepicker.  \nFor **i18n** you should include js file from here: https://github.com/eternicode/bootstrap-datepicker/tree/master/js/locales\nand set `language` option.  \nSince 1.4.0 date has different appearance in **popup** and **inline** modes.",
            "extends": "abstractinput",
            "final": 1,
            "example": [
                "\n<a href=\"#\" id=\"dob\" data-type=\"date\" data-pk=\"1\" data-url=\"/post\" data-title=\"Select date\">15/05/1984</a>\n<script>\n$(function(){\n    $('#dob').editable({\n        format: 'yyyy-mm-dd',    \n        viewformat: 'dd/mm/yyyy',    \n        datepicker: {\n                weekStart: 1\n           }\n        }\n    });\n});\n</script>"
            ]
        },
        "datefield": {
            "name": "datefield",
            "shortname": "datefield",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 53402,
            "description": "Bootstrap datefield input - modification for inline mode.\nShows normal <input type=\"text\"> and binds popup datepicker.  \nAutomatically shown in inline mode.",
            "extends": "date",
            "since": "1.4.0"
        },
        "datetime": {
            "name": "datetime",
            "shortname": "datetime",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 53483,
            "description": "Bootstrap-datetimepicker.  \nBased on [smalot bootstrap-datetimepicker plugin](https://github.com/smalot/bootstrap-datetimepicker). \nBefore usage you should manually include dependent js and css:\n\n    <link href=\"css/datetimepicker.css\" rel=\"stylesheet\" type=\"text/css\"></link> \n    <script src=\"js/bootstrap-datetimepicker.js\"></script>\n\nFor **i18n** you should include js file from here: https://github.com/smalot/bootstrap-datetimepicker/tree/master/js/locales\nand set `language` option.",
            "extends": "abstractinput",
            "final": 1,
            "since": "1.4.4",
            "example": [
                "\n<a href=\"#\" id=\"last_seen\" data-type=\"datetime\" data-pk=\"1\" data-url=\"/post\" title=\"Select date & time\">15/03/2013 12:45</a>\n<script>\n$(function(){\n    $('#last_seen').editable({\n        format: 'yyyy-mm-dd hh:ii',    \n        viewformat: 'dd/mm/yyyy hh:ii',    \n        datetimepicker: {\n                weekStart: 1\n           }\n        }\n    });\n});\n</script>"
            ]
        },
        "datetimefield": {
            "name": "datetimefield",
            "shortname": "datetimefield",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/dependencies.js",
            "line": 53727,
            "description": "Bootstrap datetimefield input - datetime input for inline mode.\nShows normal <input type=\"text\"> and binds popup datetimepicker.  \nAutomatically shown in inline mode.",
            "extends": "datetime"
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1057,
            "description": "Represents the Tablear Grid plugin.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "element",
                    "description": "The corresponding DOM element.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The options to override default settings.",
                    "type": "Object"
                }
            ],
            "chainable": 1
        },
        "defaults": {
            "name": "defaults",
            "shortname": "defaults",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1097,
            "description": "An object that represents the default settings.",
            "static": 1,
            "example": [
                "\n  // Global approach\n  $.tablear.defaults.selection = true;",
                "\n  // Initialization approach\n  $(\"#tablear\").tablear({ selection = true });"
            ]
        },
        "searchSettings": {
            "name": "searchSettings",
            "shortname": "searchSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": ""
        },
        "ajaxSettings": {
            "name": "ajaxSettings",
            "shortname": "ajaxSettings",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": ""
        },
        "css": {
            "name": "css",
            "shortname": "css",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": ""
        },
        "colorMapping": {
            "name": "colorMapping",
            "shortname": "colorMapping",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": ""
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "dist/js/dependencies.js",
            "line": 872,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, object)"
            },
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 892,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 901,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 922,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 936,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 965,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 976,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 987,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 1009,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 1021,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 1033,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 1471,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 1504,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 2534,
            "description": "A low-level selection function that works with Sizzle's compiled\n selector functions",
            "params": [
                {
                    "name": "selector",
                    "description": "A selector or a pre-compiled\n selector function built with Sizzle.compile",
                    "type": "String|Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "seed",
                    "description": "A set of elements to match against",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 3546,
            "description": "The ready event handler and self cleanup method",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 5586,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 5605,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 9391,
            "description": "Load a url into a page",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 9487,
            "description": "Gets a window from an element",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 19847,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 19848,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 19849,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20051,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20052,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20053,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20397,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20398,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 20399,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26792,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26837,
            "description": "TableDnD plug-in for JQuery, allows you to drag and drop table rows\nYou can set up various options to control how the system will work\nCopyright (c) Denis Howlett <denish@isocra.com>\nLicensed like jQuery, see http://docs.jquery.com/License.\n\nConfiguration options:\n\nonDragStyle\n    This is the style that is assigned to the row during drag. There are limitations to the styles that can be\n    associated with a row (such as you can't assign a border--well you can, but it won't be\n    displayed). (So instead consider using onDragClass.) The CSS style to apply is specified as\n    a map (as used in the jQuery css(...) function).\nonDropStyle\n    This is the style that is assigned to the row when it is dropped. As for onDragStyle, there are limitations\n    to what you can do. Also this replaces the original style, so again consider using onDragClass which\n    is simply added and then removed on drop.\nonDragClass\n    This class is added for the duration of the drag and then removed when the row is dropped. It is more\n    flexible than using onDragStyle since it can be inherited by the row cells and other content. The default\n    is class is tDnD_whileDrag. So to use the default, simply customise this CSS class in your\n    stylesheet.\nonDrop\n    Pass a function that will be called when the row is dropped. The function takes 2 parameters: the table\n    and the row that was dropped. You can work out the new order of the rows by using\n    table.rows.\nonDragStart\n    Pass a function that will be called when the user starts dragging. The function takes 2 parameters: the\n    table and the row which the user has started to drag.\nonAllowDrop\n    Pass a function that will be called as a row is over another row. If the function returns true, allow\n    dropping on that row, otherwise not. The function takes 2 parameters: the dragged row and the row under\n    the cursor. It returns a boolean: true allows the drop, false doesn't allow it.\nscrollAmount\n    This is the number of pixels to scroll if the user moves the mouse cursor to the top or bottom of the\n    window. The page should automatically scroll up or down as appropriate (tested in IE6, IE7, Safari, FF2,\n    FF3 beta\ndragHandle\n    This is a jQuery mach string for one or more cells in each row that is draggable. If you\n    specify this, then you are responsible for setting cursor: move in the CSS and only these cells\n    will have the drag behaviour. If you do not specify a dragHandle, then you get the old behaviour where\n    the whole row is draggable.\n\nOther ways to control behaviour:\n\nAdd class=\"nodrop\" to any rows for which you don't want to allow dropping, and class=\"nodrag\" to any rows\nthat you don't want to be draggable.\n\nInside the onDrop method you can also call $.tableDnD.serialize() this returns a string of the form\n<tableID>[]=<rowID1>&<tableID>[]=<rowID2> so that you can send this back to the server. The table must have\nan ID as must all the rows.\n\nOther methods:\n\n$(\"...\").tableDnDUpdate()\nWill update all the matching tables, that is it will reapply the mousedown method to the rows (or handle cells).\nThis is useful if you have updated the table rows using Ajax and you want to make the table draggable again.\nThe table maintains the original configuration (so you don't have to specify it again).\n\n$(\"...\").tableDnDSerialize()\nWill serialize and return the serialized string as above, but for each of the matching tables--so it can be\ncalled from anywhere and isn't dependent on the currentTable being set up correctly before calling\n\nKnown problems:\n- Auto-scoll has some problems with IE7  (it scrolls even when it shouldn't), work-around: set scrollAmount to 0\n\nVersion 0.2: 2008-02-20 First public version\nVersion 0.3: 2008-02-07 Added onDragStart option\n                        Made the scroll amount configurable (default is 5 as before)\nVersion 0.4: 2008-03-15 Changed the noDrag/noDrop attributes to nodrag/nodrop classes\n                        Added onAllowDrop to control dropping\n                        Fixed a bug which meant that you couldn't set the scroll amount in both directions\n                        Added serialize method\nVersion 0.5: 2008-05-16 Changed so that if you specify a dragHandle class it doesn't make the whole row\n                        draggable\n                        Improved the serialize method to use a default (and settable) regular expression.\n                        Added tableDnDupate() and tableDnDSerialize() to be called when you are outside the table\nVersion 0.6: 2011-12-02 Added support for touch devices\nVersion 0.7  2012-04-09 Now works with jQuery 1.7 and supports touch, tidied up tabs and spaces\nVERSION MCM  2016-07-09 Modified currentOrder",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26969,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26971,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26973,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26975,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26979,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26993,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26995,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26997,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 26999,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27001,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27003,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27005,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27007,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27009,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27065,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27124,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27143,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27159,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 27310,
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 29876,
            "description": "_ _____           _          _     _      \n              | |  __ \\         (_)        | |   | |     \n      ___ ___ | | |__) |___  ___ _ ______ _| |__ | | ___ \n     / __/ _ \\| |  _  // _ \\/ __| |_  / _` | '_ \\| |/ _ \\\n    | (_| (_) | | | \\ \\  __/\\__ \\ |/ / (_| | |_) | |  __/\n     \\___\\___/|_|_|  \\_\\___||___/_/___\\__,_|_.__/|_|\\___|\n\t \n\tv1.6 - jQuery plugin created by Alvaro Prieto Lauroba\n\t\n\tLicences: MIT & GPL\n\tFeel free to use or modify this plugin as far as my full name is kept\t\n\t\n\tIf you are going to use this plug-in in production environments it is \n\tstrongly recommended to use its minified version: colResizable.min.js",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 29919,
            "description": "Function to allow column resizing for table objects. It is the starting point to apply the plugin.",
            "params": [
                {
                    "name": "tb",
                    "description": "- reference to the DOM table object to be enhanced",
                    "type": "DOM node"
                },
                {
                    "name": "options",
                    "description": "- some customization values",
                    "type": "Object"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 29947,
            "description": "This function allows to remove any enhancements performed by this plugin on a previously processed table.",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 29959,
            "description": "Function to create all the grips associated with the table given by parameters",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30009,
            "description": "Function to allow the persistence of columns dimensions after a browser postback. It is based in\nthe HTML5 sessionStorage object, which can be emulated for older browsers using sessionstorage.js",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                },
                {
                    "name": "th",
                    "description": "- reference to the first row elements (only set in deserialization)",
                    "type": "JQuery ref"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30049,
            "description": "Function that places each grip in the correct position according to the current table layout",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30066,
            "description": "This function updates column's width according to the horizontal position increment of the grip being\ndragged. The function can be called while dragging if liveDragging is enabled and also from the onGripDragOver\nevent handler to synchronize grip's position with their related columns.",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                },
                {
                    "name": "i",
                    "description": "- index of the grip being dragged",
                    "type": "Number"
                },
                {
                    "name": "isOver",
                    "description": "- to identify when the function is being called from the onGripDragOver event",
                    "type": "Bool"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30092,
            "description": "This function updates all columns width according to its real width. It must be taken into account that the \nsum of all columns can exceed the table width in some cases (if fixed is set to false and table has some kind \nof max-width).",
            "params": [
                {
                    "name": "t",
                    "description": "- table object",
                    "type": "JQuery ref"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30110,
            "description": "Event handler used while dragging a grip. It checks if the next grip's position is valid and updates it.",
            "params": [
                {
                    "name": "e",
                    "description": "- mousemove event binded to the window object",
                    "type": "Event"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30154,
            "description": "Event handler fired when the dragging is over, updating table layout",
            "params": [
                {
                    "name": "e",
                    "description": "- grip's drag over event",
                    "type": "Event"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30185,
            "description": "Event handler fired when the grip's dragging is about to start. Its main goal is to set up events \nand store some values used while dragging.",
            "params": [
                {
                    "name": "e",
                    "description": "- grip's mousedown event",
                    "type": "Event"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30207,
            "description": "Event handler fired when the browser is resized. The main purpose of this function is to update\ntable layout according to the browser's size synchronizing related grips",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30243,
            "description": "The plugin is added to the jQuery library",
            "params": [
                {
                    "name": "options",
                    "description": "-  an object that holds some basic customization values",
                    "type": "Object"
                }
            ],
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30497,
            "description": "The default configuration, and available options to configure touch swipe with.\nYou can set the default values by updating any of the properties prior to instantiation.",
            "name": "{boolean} [preventDefaultEvents=true] by default default events are cancelled, so the page doesn't move.  You can dissable this so both native events fire as well as your handlers.",
            "itemtype": "property",
            "type": "Int",
            "class": "See the jQuery Library  (http://jquery.com/) for full details.  This just\ndocuments the function and classes that are added to jQuery by this plug-in."
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30607,
            "description": "The version of the plugin",
            "readonly": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30618,
            "description": "The phases that a touch event goes through.  The <code>phase</code> is passed to the event handlers.\nThese properties are read only, attempting to change them will not alter the values passed to the event handlers.",
            "readonly": "",
            "itemtype": "property",
            "name": "{string} PHASE_CANCEL Constant indicating the cancel phase of the touch event. Value is <code>\"cancel\"</code>.",
            "type": "String",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30635,
            "description": "The direction constants that are passed to the event handlers.\nThese properties are read only, attempting to change them will not alter the values passed to the event handlers.",
            "readonly": "",
            "itemtype": "property",
            "name": "{string} OUT Constant indicating the out direction. Value is <code>\"out\"</code>.",
            "type": "String",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30656,
            "description": "The page scroll constants that can be used to set the value of <code>allowPageScroll</code> option\nThese properties are read only",
            "readonly": "",
            "see": [
                "$.fn.swipe.defaults#allowPageScroll"
            ],
            "itemtype": "property",
            "name": "{string} AUTO Constant indicating either horizontal or vertical will be allowed, depending on the swipe handlers registered. Value is <code>\"auto\"</code>.",
            "type": "String",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30674,
            "description": "Constants representing the number of fingers used in a swipe.  These are used to set both the value of <code>fingers</code> in the\noptions object, as well as the value of the <code>fingers</code> event property.\nThese properties are read only, attempting to change them will not alter the values passed to the event handlers.",
            "readonly": "",
            "see": [
                "$.fn.swipe.defaults#fingers"
            ],
            "itemtype": "property",
            "name": "{string} ALL Constant indicating any combination of finger are to be detected.  Value is <code>\"all\"</code>.",
            "type": "String",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30697,
            "description": "Initialise the plugin for each DOM element matched\nThis creates a new instance of the main TouchSwipe class for each DOM element, and then\nsaves a reference to that instance in the elements data property.",
            "internal": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30810,
            "description": "re-enables the swipe plugin with the previous configuration",
            "itemtype": "method",
            "name": "$.fn.swipe#enable",
            "return": {
                "description": "The Dom element that was registered with TouchSwipe",
                "type": "DOMNode"
            },
            "example": [
                " $(\"#element\").swipe(\"enable\");"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30825,
            "description": "disables the swipe plugin",
            "itemtype": "method",
            "name": "$.fn.swipe#disable",
            "return": {
                "description": "The Dom element that is now registered with TouchSwipe",
                "type": "DOMNode"
            },
            "example": [
                " $(\"#element\").swipe(\"disable\");"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30837,
            "description": "Destroy the swipe plugin completely. To use any swipe methods, you must re initialise the plugin.",
            "itemtype": "method",
            "name": "$.fn.swipe#destroy",
            "example": [
                " $(\"#element\").swipe(\"destroy\");"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30850,
            "description": "Allows run time updating of the swipe configuration options.",
            "itemtype": "method",
            "name": "$.fn.swipe#option",
            "params": [
                {
                    "name": "property",
                    "description": "The option property to get or set, or a has of multiple options to set",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set the property to",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "If only a property name is passed, then that property value is returned. If nothing is passed the current options hash is returned.",
                "type": "Object"
            },
            "example": [
                " $(\"#element\").swipe(\"option\", \"threshold\"); // return the threshold",
                " $(\"#element\").swipe(\"option\", \"threshold\", 100); // set the threshold after init",
                " $(\"#element\").swipe(\"option\", {threshold:100, fingers:3} ); // set multiple properties after init",
                " $(\"#element\").swipe({threshold:100, fingers:3} ); // set multiple properties after init - the \"option\" method is optional!",
                " $(\"#element\").swipe(\"option\"); // Return the current options hash"
            ],
            "see": [
                "$.fn.swipe.defaults"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30893,
            "description": "Event handler for a touch start event.\nStops the default click event from triggering and stores where we touched",
            "access": "inner",
            "tagname": "",
            "params": [
                {
                    "name": "jqEvent",
                    "description": "The normalised jQuery event object.",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 30998,
            "description": "Event handler for a touch move event.\nIf we change fingers during move, then cancel the event",
            "access": "inner",
            "tagname": "",
            "params": [
                {
                    "name": "jqEvent",
                    "description": "The normalised jQuery event object.",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31115,
            "description": "Event handler for a touch end event.\nCalculate the direction and trigger events",
            "access": "inner",
            "tagname": "",
            "params": [
                {
                    "name": "jqEvent",
                    "description": "The normalised jQuery event object.",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31181,
            "description": "Event handler for a touch cancel event.\nClears current vars",
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31202,
            "description": "Event handler for a touch leave event.\nThis is only triggered on desktops, in touch we work this out manually\nas the touchleave event is not supported in webkit",
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31219,
            "description": "Removes all listeners that were associated with the plugin",
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31238,
            "description": "Checks if the time and distance thresholds have been met, and if so then the appropriate handlers are fired.",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31267,
            "description": "Trigger the relevant event handler\nThe handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, \"left\", \"right\", \"up\", or \"down\"",
            "params": [
                {
                    "name": "event",
                    "description": "the original event object",
                    "type": "Object"
                },
                {
                    "name": "phase",
                    "description": "the phase of the swipe (start, end cancel etc) {@link $.fn.swipe.phases}",
                    "type": "String"
                }
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31337,
            "description": "Trigger the relevant event handler\nThe handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, \"left\", \"right\", \"up\", or \"down\"",
            "params": [
                {
                    "name": "event",
                    "description": "the original event object",
                    "type": "Object"
                },
                {
                    "name": "phase",
                    "description": "the phase of the swipe (start, end cancel etc) {@link $.fn.swipe.phases}",
                    "type": "String"
                },
                {
                    "name": "gesture",
                    "description": "the gesture to trigger a handler for : PINCH or SWIPE {@link $.fn.swipe.gestures}",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Boolean False, to indicate that the event should stop propagation, or void."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31505,
            "description": "Checks the user has swipe far enough",
            "return": {
                "description": "Boolean if <code>threshold</code> has been set, return true if the threshold was met, else false.\nIf no threshold was set, then we return true."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31521,
            "description": "Checks the user has swiped back to cancel.",
            "return": {
                "description": "Boolean if <code>cancelThreshold</code> has been set, return true if the cancelThreshold was met, else false.\nIf no cancelThreshold was set, then we return true."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31536,
            "description": "Checks the user has pinched far enough",
            "return": {
                "description": "Boolean if <code>pinchThreshold</code> has been set, return true if the threshold was met, else false.\nIf no threshold was set, then we return true."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31549,
            "description": "Checks that the time taken to swipe meets the minimum / maximum requirements",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31571,
            "description": "Checks direction of the swipe and the value allowPageScroll to see if we should allow or prevent the default behaviour from occurring.\nThis will essentially allow page scrolling or not when the user is swiping on a touchSwipe object.",
            "params": [
                {
                    "name": "jqEvent",
                    "description": "The normalised jQuery representation of the event object.",
                    "type": "Object"
                },
                {
                    "name": "direction",
                    "description": "The direction of the event. See {@link $.fn.swipe.directions}",
                    "type": "String"
                }
            ],
            "see": [
                "$.fn.swipe.directions"
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31625,
            "description": "Returns true of the current pinch meets the thresholds",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31638,
            "description": "Returns true if any Pinch events have been registered",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31648,
            "description": "Returns true if we are detecting pinches, and have one",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31662,
            "description": "Returns true if the current swipe meets the thresholds",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31682,
            "description": "Returns true if any Swipe events have been registered",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31693,
            "description": "Returns true if we are detecting swipes and have one",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31703,
            "description": "Returns true if we have matched the number of fingers we are looking for",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31713,
            "description": "Returns true if we have an end point for the swipe",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31724,
            "description": "Returns true if a click / tap events have been registered",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31734,
            "description": "Returns true if a double tap events have been registered",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31744,
            "description": "Returns true if any long tap events have been registered",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31754,
            "description": "Returns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31767,
            "description": "Returns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31777,
            "description": "Returns true if we have a valid tap",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31786,
            "description": "Returns true if we have a valid long tap",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31796,
            "description": "Returns true if we are detecting taps and have one",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31807,
            "description": "Returns true if we are detecting double taps and have one",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31817,
            "description": "Returns true if we are detecting long taps and have one",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31831,
            "description": "Starts tracking the time between 2 finger releases, and keeps track of how many fingers we initially had up",
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31840,
            "description": "Cancels the tracking of time between 2 finger releases, and resets counters",
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31849,
            "description": "Checks if we are in the threshold between 2 fingers being released",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31869,
            "description": "gets a data flag to indicate that a touch is in progress",
            "return": {
                "description": "Boolean"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31879,
            "description": "Sets a data flag to indicate that a touch is in progress",
            "params": [
                {
                    "name": "val",
                    "description": "The value to set the property to",
                    "type": "Boolean"
                }
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31915,
            "description": "Creates the finger data for the touch/finger in the event object.",
            "params": [
                {
                    "name": "id",
                    "description": "The id to store the finger data under (usually the order the fingers were pressed)",
                    "type": "Int"
                },
                {
                    "name": "evt",
                    "description": "The event object containing finger data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "finger data object"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31943,
            "description": "Updates the finger data for a particular event object",
            "params": [
                {
                    "name": "evt",
                    "description": "The event object containing the touch/finger data to upadte",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a finger data object."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31966,
            "description": "Returns a finger data object by its event ID.\nEach touch event has an identifier property, which is used\nto track repeat touches",
            "params": [
                {
                    "name": "id",
                    "description": "The unique id of the finger in the sequence of touch events.",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "a finger data object."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31979,
            "description": "Sets the maximum distance swiped in the given direction.\nIf the new value is lower than the current value, the max value is not changed.",
            "params": [
                {
                    "name": "direction",
                    "description": "The direction of the swipe",
                    "type": "String"
                },
                {
                    "name": "distance",
                    "description": "The distance of the swipe",
                    "type": "Int"
                }
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 31992,
            "description": "gets the maximum distance swiped in the given direction.",
            "params": [
                {
                    "name": "direction",
                    "description": "The direction of the swipe",
                    "type": "String"
                }
            ],
            "return": {
                "description": "int  The distance of the swipe"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32003,
            "description": "Creats a map of directions to maximum swiped values.",
            "return": {
                "description": "Object A dictionary of maximum values, indexed by direction."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32018,
            "description": "Creates a map maximum swiped values for a given swipe direction",
            "params": [
                {
                    "name": "The",
                    "description": "direction that these values will be associated with",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Object Maximum values"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32036,
            "description": "Calculate the duration of the swipe",
            "return": {
                "description": "int"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32045,
            "description": "Calculate the distance between 2 touches (pinch)",
            "params": [
                {
                    "name": "startPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                },
                {
                    "name": "endPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "int;"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32059,
            "description": "Calculate the zoom factor between the start and end distances",
            "params": [
                {
                    "name": "startDistance",
                    "description": "Distance (between 2 fingers) the user started pinching at",
                    "type": "Int"
                },
                {
                    "name": "endDistance",
                    "description": "Distance (between 2 fingers) the user ended pinching at",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "float The zoom value from 0 to 1."
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32072,
            "description": "Returns the pinch direction, either IN or OUT for the given points",
            "return": {
                "description": "string Either  or {@link $.fn.swipe.directions.OUT}",
                "type": "@link $.fn.swipe.directions.IN"
            },
            "see": [
                "$.fn.swipe.directions"
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32087,
            "description": "Calculate the length / distance of the swipe",
            "params": [
                {
                    "name": "startPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                },
                {
                    "name": "endPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "int"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32098,
            "description": "Calculate the angle of the swipe",
            "params": [
                {
                    "name": "startPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                },
                {
                    "name": "endPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "int"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32119,
            "description": "Calculate the direction of the swipe\nThis will also call calculateAngle to get the latest angle of swipe",
            "params": [
                {
                    "name": "startPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                },
                {
                    "name": "endPoint",
                    "description": "A point object containing x and y co-ordinates",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "string Either  / {@link $.fn.swipe.directions.RIGHT} / {@link $.fn.swipe.directions.DOWN} / {@link $.fn.swipe.directions.UP}",
                "type": "@link $.fn.swipe.directions.LEFT"
            },
            "see": [
                "$.fn.swipe.directions"
            ],
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32150,
            "description": "Returns a MS time stamp of the current time",
            "return": {
                "description": "int"
            },
            "access": "inner",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32162,
            "description": "Returns a bounds object with left, right, top and bottom properties for the element specified.",
            "params": [
                {
                    "name": "The",
                    "description": "DOM node to get the bounds for.",
                    "type": "DomNode"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32181,
            "description": "Checks if the point object is in the bounds object.",
            "params": [
                {
                    "name": "point",
                    "description": "A point object.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "The x value of the point.",
                            "type": "Int"
                        },
                        {
                            "name": "y",
                            "description": "The x value of the point.",
                            "type": "Int"
                        }
                    ]
                },
                {
                    "name": "bounds",
                    "description": "The bounds object to test",
                    "type": "Object",
                    "props": [
                        {
                            "name": "left",
                            "description": "The leftmost value",
                            "type": "Int"
                        },
                        {
                            "name": "right",
                            "description": "The righttmost value",
                            "type": "Int"
                        },
                        {
                            "name": "top",
                            "description": "The topmost value",
                            "type": "Int"
                        },
                        {
                            "name": "bottom",
                            "description": "The bottommost value",
                            "type": "Int"
                        }
                    ]
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32196,
            "description": "Checks if the two points are equal",
            "params": [
                {
                    "name": "point",
                    "description": "A point object.",
                    "type": "Object"
                },
                {
                    "name": "point",
                    "description": "B point object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true of the points match"
            },
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32212,
            "description": "A catch all handler that is triggered for all swipe directions.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32229,
            "description": "A handler that is triggered for \"left\" swipes.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32243,
            "description": "A handler that is triggered for \"right\" swipes.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32257,
            "description": "A handler that is triggered for \"up\" swipes.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32271,
            "description": "A handler that is triggered for \"down\" swipes.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32285,
            "description": "A handler triggered for every phase of the swipe. This handler is constantly fired for the duration of the pinch.\nThis is triggered regardless of swipe thresholds.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "phase",
                    "description": "The phase of the swipe event. See {@link $.fn.swipe.phases}",
                    "type": "String"
                },
                {
                    "name": "direction",
                    "description": "The direction the user swiped in. This is null if the user has yet to move. See {@link $.fn.swipe.directions}",
                    "type": "String"
                },
                {
                    "name": "distance",
                    "description": "The distance the user swiped. This is 0 if the user has yet to move.",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                },
                {
                    "name": "currentDirection",
                    "description": "The current direction the user is swiping.",
                    "type": "String"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32301,
            "description": "A handler triggered for pinch in events.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user pinched in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user pinched",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "zoom",
                    "description": "The zoom/scale level the user pinched too, 0-1.",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32315,
            "description": "A handler triggered for pinch out events.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user pinched in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user pinched",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "zoom",
                    "description": "The zoom/scale level the user pinched too, 0-1.",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32329,
            "description": "A handler triggered for all pinch events. This handler is constantly fired for the duration of the pinch. This is triggered regardless of thresholds.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "direction",
                    "description": "The direction the user pinched in. See {@link $.fn.swipe.directions}",
                    "type": "Int"
                },
                {
                    "name": "distance",
                    "description": "The distance the user pinched",
                    "type": "Int"
                },
                {
                    "name": "duration",
                    "description": "The duration of the swipe in milliseconds",
                    "type": "Int"
                },
                {
                    "name": "fingerCount",
                    "description": "The number of fingers used. See {@link $.fn.swipe.fingers}",
                    "type": "Int"
                },
                {
                    "name": "zoom",
                    "description": "The zoom/scale level the user pinched too, 0-1.",
                    "type": "Int"
                },
                {
                    "name": "fingerData",
                    "description": "The coordinates of fingers in event",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32343,
            "description": "A click handler triggered when a user simply clicks, rather than swipes on an element.\nThis is deprecated since version 1.6.2, any assignment to click will be assigned to the tap handler.\nYou cannot use <code>on</code> to bind to this event as the default jQ <code>click</code> event will be triggered.\nUse the <code>tap</code> event instead.",
            "name": "",
            "itemtype": "event",
            "deprecated": true,
            "deprecationMessage": "since version 1.6.2, please use {@link $.fn.swipe#tap} instead",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "target",
                    "description": "The element clicked on.",
                    "type": "DomObject"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32356,
            "description": "A click / tap handler triggered when a user simply clicks or taps, rather than swipes on an element.",
            "name": "",
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "target",
                    "description": "The element clicked on.",
                    "type": "DomObject"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32365,
            "description": "A double tap handler triggered when a user double clicks or taps on an element.\nYou can set the time delay for a double tap with the {@link $.fn.swipe.defaults#doubleTapThreshold} property.\nNote: If you set both <code>doubleTap</code> and <code>tap</code> handlers, the <code>tap</code> event will be delayed by the <code>doubleTapThreshold</code>\nas the script needs to check if its a double tap.",
            "name": "",
            "see": [
                "$.fn.swipe.defaults#doubleTapThreshold"
            ],
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "target",
                    "description": "The element clicked on.",
                    "type": "DomObject"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32378,
            "description": "A long tap handler triggered once a tap has been release if the tap was longer than the longTapThreshold.\nYou can set the time delay for a long tap with the {@link $.fn.swipe.defaults#longTapThreshold} property.",
            "name": "",
            "see": [
                "$.fn.swipe.defaults#longTapThreshold"
            ],
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "target",
                    "description": "The element clicked on.",
                    "type": "DomObject"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 32389,
            "description": "A hold tap handler triggered as soon as the longTapThreshold is reached\nYou can set the time delay for a long tap with the {@link $.fn.swipe.defaults#longTapThreshold} property.",
            "name": "",
            "see": [
                "$.fn.swipe.defaults#longTapThreshold"
            ],
            "itemtype": "event",
            "default": "null",
            "params": [
                {
                    "name": "event",
                    "description": "The original event object",
                    "type": "EventObject"
                },
                {
                    "name": "target",
                    "description": "The element clicked on.",
                    "type": "DomObject"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 36442,
            "license": "Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46776,
            "description": "jsPDF - PDF Document creation from JavaScript\nVersion 1.0.272-git Built on 2014-09-29T15:09\n                          CommitID d4770725ca\n\nCopyright (c) 2010-2014 James Hall, https://github.com/MrRio/jsPDF\n              2010 Aaron Spike, https://github.com/acspike\n              2012 Willow Systems Corporation, willow-systems.com\n              2012 Pablo Hess, https://github.com/pablohess\n              2012 Florian Jenett, https://github.com/fjenett\n              2013 Warren Weckesser, https://github.com/warrenweckesser\n              2013 Youssef Beddad, https://github.com/lifof\n              2013 Lee Driscoll, https://github.com/lsdriscoll\n              2013 Stefan Slonevskiy, https://github.com/stefslon\n              2013 Jeremy Morel, https://github.com/jmorel\n              2013 Christoph Hartmann, https://github.com/chris-rock\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 James Makes, https://github.com/dollaruw\n              2014 Diego Casorran, https://github.com/diegocr\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nContributor(s):\n   siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\n   kim3er, mfo, alnorth,",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46819,
            "description": "jsPDF addHTML PlugIn\nCopyright (c) 2014 Diego Casorran\nLicensed under the MIT License.\nhttp://opensource.org/licenses/mit-license",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46825,
            "description": "jsPDF addImage plugin\nCopyright (c) 2012 Jason Siefken, https://github.com/siefkenj/\n              2013 Chris Dowling, https://github.com/gingerchris\n              2013 Trinh Ho, https://github.com/ineedfat\n              2013 Edwin Alejandro Perez, https://github.com/eaparango\n              2013 Norah Smith, https://github.com/burnburnrocket\n              2014 Diego Casorran, https://github.com/diegocr\n              2014 James Robb, https://github.com/jamesbrobb",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46835,
            "description": "jsPDF Cell plugin\nCopyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\n              2013 Eduardo Menezes de Morais, eduardo.morais@usp.br\n              2013 Lee Driscoll, https://github.com/lsdriscoll\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 James Hall, james@parall.ax\n              2014 Diego Casorran, https://github.com/diegocr",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46844,
            "description": "jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 Diego Casorran, https://github.com/diegocr\n              2014 Daniel Husar, https://github.com/danielhusar\n              2014 Wolfgang Gassler, https://github.com/woolfg",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46852,
            "description": "jsPDF JavaScript plugin\nCopyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46856,
            "description": "jsPDF PNG PlugIn\nCopyright (c) 2014 James Robb, https://github.com/jamesbrobb",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46860,
            "description": "jsPDF Silly SVG plugin\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46864,
            "description": "jsPDF split_text_to_size plugin - MIT license.\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\n              2014 Diego Casorran, https://github.com/diegocr",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46869,
            "description": "jsPDF standard_fonts_metrics plugin\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\nMIT license.",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46874,
            "description": "jsPDF total_pages plugin\nCopyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46938,
            "description": "JavaScript Polyfill functions for jsPDF\nCollected from public resources by\nhttps://github.com/diegocr",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 46947,
            "description": "jsPDF AutoTable plugin v2.0.14\nCopyright (c) 2014 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable\n\nLicensed under the MIT License.\nhttp://opensource.org/licenses/mit-license",
            "preserve": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47045,
            "description": "Renders editableform",
            "itemtype": "method",
            "name": "render",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47070,
            "description": "Fired when rendering starts",
            "itemtype": "event",
            "name": "rendering",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47113,
            "description": "Fired when form is rendered",
            "itemtype": "event",
            "name": "rendered",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47129,
            "description": "Fired when form was cancelled by user",
            "itemtype": "event",
            "name": "cancel",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47165,
            "description": "Fired when form is shown",
            "itemtype": "event",
            "name": "show",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47223,
            "description": "Fired when value not changed but form is submitted. Requires savenochange = false.",
            "itemtype": "event",
            "name": "nochange",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47268,
            "description": "Fired when form is submitted",
            "itemtype": "event",
            "name": "save",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "params",
                    "description": "additional params",
                    "type": "Object",
                    "props": [
                        {
                            "name": "newValue",
                            "description": "raw new value",
                            "type": "Mixed"
                        },
                        {
                            "name": "submitValue",
                            "description": "submitted value as string",
                            "type": "Mixed"
                        },
                        {
                            "name": "response",
                            "description": "ajax response",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n$('#form-div').on('save'), function(e, params){\n    if(params.newValue === 'username') {...}\n});"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47418,
            "description": "Type of input. Can be <code>text|textarea|select|date|checklist</code>",
            "itemtype": "property",
            "name": "type",
            "type": "string",
            "default": "'text'",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47426,
            "description": "Url for submit, e.g. <code>'/post'</code>  \nIf function - it will be called instead of ajax. Function should return deferred object to run fail/done callbacks.",
            "itemtype": "property",
            "name": "url",
            "type": "string|function",
            "default": "null",
            "example": [
                "\nurl: function(params) {\n    var d = new $.Deferred;\n    if(params.value === 'abc') {\n        return d.reject('error message'); //returning error via deferred object\n    } else {\n        //async saving data in js model\n        someModel.asyncSaveMethod({\n           ..., \n           success: function(){\n              d.resolve();\n           }\n        }); \n        return d.promise();\n    }\n} "
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47451,
            "description": "Additional params for submit. If defined as <code>object</code> - it is **appended** to original ajax data (pk, name and value).  \nIf defined as <code>function</code> - returned object **overwrites** original ajax data.",
            "example": [
                "\nparams: function(params) {\n    //originally params contain pk, name and value\n    params.a = 1;\n    return params;\n}"
            ],
            "itemtype": "property",
            "name": "params",
            "type": "object|function",
            "default": "null",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47466,
            "description": "Name of field. Will be submitted on server. Can be taken from <code>id</code> attribute",
            "itemtype": "property",
            "name": "name",
            "type": "string",
            "default": "null",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47474,
            "description": "Primary key of editable object (e.g. record id in database). For composite keys use object, e.g. <code>{id: 1, lang: 'en'}</code>.\nCan be calculated dynamically via function.",
            "itemtype": "property",
            "name": "pk",
            "type": "string|object|function",
            "default": "null",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47483,
            "description": "Initial value. If not defined - will be taken from element's content.\nFor __select__ type should be defined (as it is ID of shown text).",
            "itemtype": "property",
            "name": "value",
            "type": "string|object",
            "default": "null",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47492,
            "description": "Value that will be displayed in input if original field value is empty (`null|undefined|''`).",
            "itemtype": "property",
            "name": "defaultValue",
            "type": "string|object",
            "default": "null",
            "since": "1.4.6",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47501,
            "description": "Strategy for sending data on server. Can be `auto|always|never`.\nWhen 'auto' data will be sent on server **only if pk and url defined**, otherwise new value will be stored locally.",
            "itemtype": "property",
            "name": "send",
            "type": "string",
            "default": "'auto'",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47510,
            "description": "Function for client-side validation. If returns string - means validation not passed and string showed as error.\nSince 1.5.1 you can modify submitted value by returning object from `validate`: \n`{newValue: '...'}` or `{newValue: '...', msg: '...'}`",
            "itemtype": "property",
            "name": "validate",
            "type": "function",
            "default": "null",
            "example": [
                "\nvalidate: function(value) {\n    if($.trim(value) == '') {\n        return 'This field is required';\n    }\n}"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47526,
            "description": "Success callback. Called when value successfully sent on server and **response status = 200**.  \nUsefull to work with json response. For example, if your backend response can be <code>{success: true}</code>\nor <code>{success: false, msg: \"server error\"}</code> you can check it inside this callback.  \nIf it returns **string** - means error occured and string is shown as error message.  \nIf it returns **object like** <code>{newValue: &lt;something&gt;}</code> - it overwrites value, submitted by user.  \nOtherwise newValue simply rendered into element.",
            "itemtype": "property",
            "name": "success",
            "type": "function",
            "default": "null",
            "example": [
                "\nsuccess: function(response, newValue) {\n    if(!response.success) return response.msg;\n}"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47543,
            "description": "Error callback. Called when request failed (response status != 200).  \nUsefull when you want to parse error response and display a custom message.\nMust return **string** - the message to be displayed in the error block.",
            "itemtype": "property",
            "name": "error",
            "type": "function",
            "default": "null",
            "since": "1.4.4",
            "example": [
                "\nerror: function(response, newValue) {\n    if(response.status === 500) {\n        return 'Service unavailable. Please try later.';\n    } else {\n        return response.responseText;\n    }\n}"
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47562,
            "description": "Additional options for submit ajax request.\nList of values: http://api.jquery.com/jQuery.ajax",
            "itemtype": "property",
            "name": "ajaxOptions",
            "type": "object",
            "default": "null",
            "since": "1.1.1",
            "example": [
                " \najaxOptions: {\n    type: 'put',\n    dataType: 'json'\n}        "
            ],
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47577,
            "description": "Where to show buttons: left(true)|bottom|false  \nForm without buttons is auto-submitted.",
            "itemtype": "property",
            "name": "showbuttons",
            "type": "boolean|string",
            "default": "true",
            "since": "1.1.1",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47587,
            "description": "Scope for callback methods (success, validate).  \nIf <code>null</code> means editableform instance itself.",
            "itemtype": "property",
            "name": "scope",
            "type": "DOMElement|object",
            "default": "null",
            "since": "1.2.0",
            "access": "private",
            "tagname": "",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47598,
            "description": "Whether to save or cancel value when it was not changed but form was submitted",
            "itemtype": "property",
            "name": "savenochange",
            "type": "boolean",
            "default": "false",
            "since": "1.2.0",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47637,
            "description": "EditableForm utilites",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47645,
            "description": "classic JS inheritance function",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47656,
            "description": "set caret position in input\nsee http://stackoverflow.com/questions/499126/jquery-set-cursor-position-in-text-area",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47672,
            "description": "function to parse JSON in *single* quotes. (jquery automatically parse only double quotes)\nThat allows such code as: <a data-source=\"{'a': 'b', 'c': 'd'}\">\nsafe = true --> means no exception will be thrown\nfor details see http://stackoverflow.com/questions/7410348/how-to-set-json-format-to-html5-data-attributes-in-the-jquery",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47697,
            "description": "slice object by specified keys",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 47763,
            "description": "method to escape html.",
            "class": "editableform"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48051,
            "description": "Fired when container is shown and form is rendered (for select will wait for loading dropdown options).  \n**Note:** Bootstrap popover has own `shown` event that now cannot be separated from x-editable's one.\nThe workaround is to check `arguments.length` that is always `2` for x-editable.",
            "itemtype": "event",
            "name": "shown",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                }
            ],
            "example": [
                "\n$('#username').on('shown', function(e, editable) {\n    editable.input.$input.val('overwriting value of input..');\n});                     "
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48072,
            "description": "Shows container with form",
            "itemtype": "method",
            "name": "show()",
            "params": [
                {
                    "name": "closeAll",
                    "description": "Whether to close all other editable containers when showing this one. Default true.",
                    "type": "Boolean"
                }
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48118,
            "description": "Hides container with form",
            "itemtype": "method",
            "name": "hide()",
            "params": [
                {
                    "name": "reason",
                    "description": "Reason caused hiding. Can be <code>save|cancel|onblur|nochange|undefined (=manual)</code>",
                    "type": "String"
                }
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48139,
            "description": "Fired when container was hidden. It occurs on both save or cancel.  \n**Note:** Bootstrap popover has own `hidden` event that now cannot be separated from x-editable's one.\nThe workaround is to check `arguments.length` that is always `2` for x-editable.",
            "itemtype": "event",
            "name": "hidden",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "reason",
                    "description": "Reason caused hiding. Can be <code>save|cancel|onblur|nochange|manual</code>",
                    "type": "String"
                }
            ],
            "example": [
                "\n$('#username').on('hidden', function(e, reason) {\n    if(reason === 'save' || reason === 'cancel') {\n        //auto-open next editable\n        $(this).closest('tr').next().find('.editable').editable('show');\n    } \n});"
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48168,
            "description": "Toggles container visibility (show / hide)",
            "itemtype": "method",
            "name": "toggle()",
            "params": [
                {
                    "name": "closeAll",
                    "description": "Whether to close all other editable containers when showing this one. Default true.",
                    "type": "Boolean"
                }
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48190,
            "description": "Fired when new value was submitted. You can use <code>$(this).data('editableContainer')</code> inside handler to access to editableContainer instance",
            "itemtype": "event",
            "name": "save",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "params",
                    "description": "additional params",
                    "type": "Object",
                    "props": [
                        {
                            "name": "newValue",
                            "description": "submitted value",
                            "type": "Mixed"
                        },
                        {
                            "name": "response",
                            "description": "ajax response",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n$('#username').on('save', function(e, params) {\n    //assuming server response: '{success: true}'\n    var pk = $(this).data('editableContainer').options.pk;\n    if(params.response && params.response.success) {\n        alert('value: ' + params.newValue + ' with pk: ' + pk + ' saved!');\n    } else {\n        alert('error!'); \n    } \n});"
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48215,
            "description": "Sets new option",
            "itemtype": "method",
            "name": "option(key, value)",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48239,
            "description": "Destroys the container instance",
            "itemtype": "method",
            "name": "destroy()",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48283,
            "description": "Activates input of visible container (e.g. set focus)",
            "itemtype": "method",
            "name": "activate()",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48295,
            "description": "jQuery method to initialize editableContainer.",
            "itemtype": "method",
            "name": "$().editableContainer(options)",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "example": [
                "\n$('#edit').editableContainer({\n    type: 'text',\n    url: '/post',\n    pk: 1,\n    value: 'hello'\n});"
            ],
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48333,
            "description": "Initial value of form input",
            "itemtype": "property",
            "name": "value",
            "type": "mixed",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48342,
            "description": "Placement of container relative to element. Can be <code>top|right|bottom|left</code>. Not used for inline container.",
            "itemtype": "property",
            "name": "placement",
            "type": "string",
            "default": "'top'",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48350,
            "description": "Whether to hide container on save/cancel.",
            "itemtype": "property",
            "name": "autohide",
            "type": "boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48359,
            "description": "Action when user clicks outside the container. Can be <code>cancel|submit|ignore</code>.  \nSetting <code>ignore</code> allows to have several containers open.",
            "itemtype": "property",
            "name": "onblur",
            "type": "string",
            "default": "'cancel'",
            "since": "1.1.1",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48370,
            "description": "Animation speed (inline mode only)",
            "itemtype": "property",
            "name": "anim",
            "type": "string",
            "default": "false",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48378,
            "description": "Mode of editable, can be `popup` or `inline`",
            "itemtype": "property",
            "name": "mode",
            "type": "string",
            "default": "'popup'",
            "since": "1.4.0",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48403,
            "description": "Editable Inline \n---------------------",
            "class": "editableContainer"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48576,
            "description": "Fired when element was initialized by `$().editable()` method. \nPlease note that you should setup `init` handler **before** applying `editable`.",
            "itemtype": "event",
            "name": "init",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "editable",
                    "description": "editable instance (as here it cannot accessed via data('editable'))",
                    "type": "Object"
                }
            ],
            "since": "1.2.0",
            "example": [
                "\n$('#username').on('init', function(e, editable) {\n    alert('initialized ' + editable.options.name);\n});\n$('#username').editable();"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48642,
            "description": "Enables editable",
            "itemtype": "method",
            "name": "enable()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48657,
            "description": "Disables editable",
            "itemtype": "method",
            "name": "disable()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48670,
            "description": "Toggles enabled / disabled state of editable element",
            "itemtype": "method",
            "name": "toggleDisabled()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48682,
            "description": "Sets new option",
            "itemtype": "method",
            "name": "option(key, value)",
            "params": [
                {
                    "name": "key",
                    "description": "option name or object with several options",
                    "type": "String|object"
                },
                {
                    "name": "value",
                    "description": "option new value",
                    "type": "Mixed"
                }
            ],
            "example": [
                "\n$('.editable').editable('option', 'pk', 2);"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48773,
            "description": "Shows container with form",
            "itemtype": "method",
            "name": "show()",
            "params": [
                {
                    "name": "closeAll",
                    "description": "Whether to close all other editable containers when showing this one. Default true.",
                    "type": "Boolean"
                }
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48801,
            "description": "Hides container with form",
            "itemtype": "method",
            "name": "hide()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48811,
            "description": "Toggles container visibility (show / hide)",
            "itemtype": "method",
            "name": "toggle()",
            "params": [
                {
                    "name": "closeAll",
                    "description": "Whether to close all other editable containers when showing this one. Default true.",
                    "type": "Boolean"
                }
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48871,
            "description": "Fired when new value was submitted. You can use <code>$(this).data('editable')</code> to access to editable instance",
            "itemtype": "event",
            "name": "save",
            "params": [
                {
                    "name": "event",
                    "description": "event object",
                    "type": "Object"
                },
                {
                    "name": "params",
                    "description": "additional params",
                    "type": "Object",
                    "props": [
                        {
                            "name": "newValue",
                            "description": "submitted value",
                            "type": "Mixed"
                        },
                        {
                            "name": "response",
                            "description": "ajax response",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n$('#username').on('save', function(e, params) {\n    alert('Saved value: ' + params.newValue);\n});"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48893,
            "description": "Sets new value of editable",
            "itemtype": "method",
            "name": "setValue(value, convertStr)",
            "params": [
                {
                    "name": "value",
                    "description": "new value",
                    "type": "Mixed"
                },
                {
                    "name": "convertStr",
                    "description": "whether to convert value from string to internal format",
                    "type": "Boolean"
                }
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48914,
            "description": "Activates input of visible container (e.g. set focus)",
            "itemtype": "method",
            "name": "activate()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48924,
            "description": "Removes editable feature from element",
            "itemtype": "method",
            "name": "destroy()",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48952,
            "description": "jQuery method to initialize editable element.",
            "itemtype": "method",
            "name": "$().editable(options)",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "example": [
                "\n$('#username').editable({\n    type: 'text',\n    url: '/post',\n    pk: 1\n});"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48968,
            "description": "Runs client-side validation for all matched editables",
            "itemtype": "method",
            "name": "validate()",
            "return": {
                "description": "validation errors map",
                "type": "Object"
            },
            "example": [
                "\n$('#username, #fullname').editable('validate');\n// possible result:\n{\n  username: \"username is required\",\n  fullname: \"fullname should be minimum 3 letters length\"\n}"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 48990,
            "description": "Returns current values of editable elements.   \nNote that it returns an **object** with name-value pairs, not a value itself. It allows to get data from several elements.    \nIf value of some editable is `null` or `undefined` it is excluded from result object.\nWhen param `isSingle` is set to **true** - it is supposed you have single element and will return value of editable instead of object.",
            "itemtype": "method",
            "name": "getValue()",
            "params": [
                {
                    "name": "isSingle",
                    "description": "whether to return just value of single element",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "object of element names and values",
                "type": "Object"
            },
            "example": [
                "\n$('#username, #fullname').editable('getValue');\n//result:\n{\nusername: \"superuser\",\nfullname: \"John\"\n}\n//isSingle = true\n$('#username').editable('getValue', true);\n//result \"superuser\" "
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49023,
            "description": "This method collects values from several editable elements and submit them all to server.   \nInternally it runs client-side validation for all fields and submits only in case of success.  \nSee <a href=\"#newrecord\">creating new records</a> for details.  \nSince 1.5.1 `submit` can be applied to single element to send data programmatically. In that case\n`url`, `success` and `error` is taken from initial options and you can just call `$('#username').editable('submit')`.",
            "itemtype": "method",
            "name": "submit(options)",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "url to submit data",
                            "type": "Object"
                        },
                        {
                            "name": "data",
                            "description": "additional data to submit",
                            "type": "Object"
                        },
                        {
                            "name": "ajaxOptions",
                            "description": "additional ajax options",
                            "type": "Object"
                        },
                        {
                            "name": "error(obj)",
                            "description": "error handler",
                            "type": "Function"
                        },
                        {
                            "name": "success(obj,config)",
                            "description": "success handler",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "return": {
                "description": "jQuery object",
                "type": "Object"
            },
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49146,
            "description": "Type of input. Can be <code>text|textarea|select|date|checklist</code> and more",
            "itemtype": "property",
            "name": "type",
            "type": "string",
            "default": "'text'",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49154,
            "description": "Sets disabled state of editable",
            "itemtype": "property",
            "name": "disabled",
            "type": "boolean",
            "default": "false",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49162,
            "description": "How to toggle editable. Can be <code>click|dblclick|mouseenter|manual</code>.   \nWhen set to <code>manual</code> you should manually call <code>show/hide</code> methods of editable.    \n**Note**: if you call <code>show</code> or <code>toggle</code> inside **click** handler of some DOM element, \nyou need to apply <code>e.stopPropagation()</code> because containers are being closed on any click on document.",
            "example": [
                "\n$('#edit-button').click(function(e) {\n    e.stopPropagation();\n    $('#username').editable('toggle');\n});"
            ],
            "itemtype": "property",
            "name": "toggle",
            "type": "string",
            "default": "'click'",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49179,
            "description": "Text shown when element is empty.",
            "itemtype": "property",
            "name": "emptytext",
            "type": "string",
            "default": "'Empty'",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49187,
            "description": "Allows to automatically set element's text based on it's value. Can be <code>auto|always|never</code>. Useful for select and date.\nFor example, if dropdown list is <code>{1: 'a', 2: 'b'}</code> and element's value set to <code>1</code>, it's html will be automatically set to <code>'a'</code>.  \n<code>auto</code> - text will be automatically set only if element is empty.  \n<code>always|never</code> - always(never) try to set element's text.",
            "itemtype": "property",
            "name": "autotext",
            "type": "string",
            "default": "'auto'",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49198,
            "description": "Initial value of input. If not set, taken from element's text.  \nNote, that if element's text is empty - text is automatically generated from value and can be customized (see `autotext` option).  \nFor example, to display currency sign:",
            "example": [
                "\n<a id=\"price\" data-type=\"text\" data-value=\"100\"></a>\n<script>\n$('#price').editable({\n    ...\n    display: function(value) {\n      $(this).text(value + '$');\n    } \n}) \n</script>"
            ],
            "itemtype": "property",
            "name": "value",
            "type": "mixed",
            "default": "element's text",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49218,
            "description": "Callback to perform custom displaying of value in element's text.  \nIf `null`, default input's display used.  \nIf `false`, no displaying methods will be called, element's text will never change.  \nRuns under element's scope.  \n_**Parameters:**_  \n\n* `value` current value to be displayed\n* `response` server response (if display called after ajax submit), since 1.4.0\n \nFor _inputs with source_ (select, checklist) parameters are different:  \n  \n* `value` current value to be displayed\n* `sourceData` array of items for current input (e.g. dropdown items) \n* `response` server response (if display called after ajax submit), since 1.4.0\n          \nTo get currently selected items use `$.fn.editableutils.itemsByValue(value, sourceData)`.",
            "itemtype": "property",
            "name": "display",
            "type": "function|boolean",
            "default": "null",
            "since": "1.2.0",
            "example": [
                "\ndisplay: function(value, sourceData) {\n   //display checklist as comma-separated values\n   var html = [],\n       checked = $.fn.editableutils.itemsByValue(value, sourceData);\n       \n   if(checked.length) {\n       $.each(checked, function(i, v) { html.push($.fn.editableutils.escape(v.text)); });\n       $(this).html(html.join(', '));\n   } else {\n       $(this).empty(); \n   }\n}"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49255,
            "description": "Css class applied when editable text is empty.",
            "itemtype": "property",
            "name": "emptyclass",
            "type": "string",
            "since": "1.4.1",
            "default": "editable-empty",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49264,
            "description": "Css class applied when value was stored but not sent to server (`pk` is empty or `send = 'never'`).  \nYou may set it to `null` if you work with editables locally and submit them together.",
            "itemtype": "property",
            "name": "unsavedclass",
            "type": "string",
            "since": "1.4.1",
            "default": "editable-unsaved",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49274,
            "description": "If selector is provided, editable will be delegated to the specified targets.  \nUsefull for dynamically generated DOM elements.  \n**Please note**, that delegated targets can't be initialized with `emptytext` and `autotext` options, \nas they actually become editable only after first click.  \nYou should manually set class `editable-click` to these elements.  \nAlso, if element originally empty you should add class `editable-empty`, set `data-value=\"\"` and write emptytext into element:",
            "itemtype": "property",
            "name": "selector",
            "type": "string",
            "since": "1.4.1",
            "default": "null",
            "example": [
                "\n<div id=\"user\">\n  <!-- empty -->\n  <a href=\"#\" data-name=\"username\" data-type=\"text\" class=\"editable-click editable-empty\" data-value=\"\" title=\"Username\">Empty</a>\n  <!-- non-empty -->\n  <a href=\"#\" data-name=\"group\" data-type=\"select\" data-source=\"/groups\" data-value=\"1\" class=\"editable-click\" title=\"Group\">Operator</a>\n</div>     \n\n<script>\n$('#user').editable({\n    selector: 'a',\n    url: '/post',\n    pk: 1\n});\n</script>"
            ],
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49303,
            "description": "Color used to highlight element after update. Implemented via CSS3 transition, works in modern browsers.",
            "itemtype": "property",
            "name": "highlight",
            "type": "string|boolean",
            "since": "1.4.5",
            "default": "#FFFF80",
            "class": "editable"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49332,
            "description": "Initializes input",
            "itemtype": "method",
            "name": "init()",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49352,
            "description": "Renders input from tpl. Can return jQuery deferred object.\nCan be overwritten in child objects",
            "itemtype": "method",
            "name": "render()",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49362,
            "description": "Sets element's html by value.",
            "itemtype": "method",
            "name": "value2html(value, element)",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "DOMElement"
                }
            ],
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49373,
            "description": "Converts element's html to value",
            "itemtype": "method",
            "name": "html2value(html)",
            "params": [
                {
                    "name": "html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49384,
            "description": "Converts value to string (for internal compare). For submitting to server used value2submit().",
            "itemtype": "method",
            "name": "value2str(value)",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49395,
            "description": "Converts string received from server into value. Usually from `data-value` attribute.",
            "itemtype": "method",
            "name": "str2value(str)",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49406,
            "description": "Converts value for submitting to server. Result can be string or object.",
            "itemtype": "method",
            "name": "value2submit(value)",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49417,
            "description": "Sets value of input.",
            "itemtype": "method",
            "name": "value2input(value)",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49427,
            "description": "Returns value of input. Value can be object (e.g. datepicker)",
            "itemtype": "method",
            "name": "input2value()",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49436,
            "description": "Activates input. For text it sets focus.",
            "itemtype": "method",
            "name": "activate()",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49447,
            "description": "Creates input.",
            "itemtype": "method",
            "name": "clear()",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49456,
            "description": "method to escape html.",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49463,
            "description": "attach handler to automatically submit form when value changed (useful when buttons not shown)",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49470,
            "description": "Additional actions when destroying element",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49496,
            "description": "HTML template of input. Normally you should not change it.",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "''",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49504,
            "description": "CSS class automatically applied to input",
            "itemtype": "property",
            "name": "inputclass",
            "type": "string",
            "default": "null",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49513,
            "description": "If `true` - html will be escaped in content of element via $.text() method.  \nIf `false` - html will not be escaped, $.html() used.  \nWhen you use own `display` function, this option obviosly has no effect.",
            "itemtype": "property",
            "name": "escape",
            "type": "boolean",
            "since": "1.5.0",
            "default": "true",
            "class": "abstractinput"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49750,
            "description": "convert data to array suitable for sourceData, e.g. [{value: 1, text: 'abc'}, {...}]",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49813,
            "description": "Source data for list.  \nIf **array** - it should be in format: `[{value: 1, text: \"text1\"}, {value: 2, text: \"text2\"}, ...]`  \nFor compability, object format is also supported: `{\"1\": \"text1\", \"2\": \"text2\" ...}` but it does not guarantee elements order.\n\nIf **string** - considered ajax url to load items. In that case results will be cached for fields with the same source and name. See also `sourceCache` option.\n  \nIf **function**, it should return data in format above (since 1.4.0).\n\nSince 1.4.1 key `children` supported to render OPTGROUP (for **select** input only).  \n`[{text: \"group1\", children: [{value: 1, text: \"text1\"}, {value: 2, text: \"text2\"}]}, ...]`",
            "itemtype": "property",
            "name": "source",
            "type": "string | array | object | function",
            "default": "null",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49831,
            "description": "Data automatically prepended to the beginning of dropdown list.",
            "itemtype": "property",
            "name": "prepend",
            "type": "string | array | object | function",
            "default": "false",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49839,
            "description": "Error message when list cannot be loaded (e.g. ajax error)",
            "itemtype": "property",
            "name": "sourceError",
            "type": "string",
            "default": "Error when loading list",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49847,
            "description": "if <code>true</code> and source is **string url** - results will be cached for fields with the same source.    \nUsefull for editable column in grid to prevent extra requests.",
            "itemtype": "property",
            "name": "sourceCache",
            "type": "boolean",
            "default": "true",
            "since": "1.2.0",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49857,
            "description": "Additional ajax options to be used in $.ajax() when loading list from server.\nUseful to send extra parameters (`data` key) or change request method (`type` key).",
            "itemtype": "property",
            "name": "sourceOptions",
            "type": "object|function",
            "default": "null",
            "since": "1.5.0",
            "class": "list"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49980,
            "itemtype": "property",
            "name": "tpl",
            "default": "<input type=\"text\">",
            "class": "text"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49985,
            "description": "Placeholder attribute of input. Shown when input is empty.",
            "itemtype": "property",
            "name": "placeholder",
            "type": "string",
            "default": "null",
            "class": "text"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 49994,
            "description": "Whether to show `clear` button",
            "itemtype": "property",
            "name": "clear",
            "type": "boolean",
            "default": "true",
            "class": "text"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50088,
            "itemtype": "property",
            "name": "tpl",
            "default": "<textarea></textarea>",
            "class": "textarea"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50093,
            "itemtype": "property",
            "name": "inputclass",
            "default": "input-large",
            "class": "textarea"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50098,
            "description": "Placeholder attribute of input. Shown when input is empty.",
            "itemtype": "property",
            "name": "placeholder",
            "type": "string",
            "default": "null",
            "class": "textarea"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50106,
            "description": "Number of rows in textarea",
            "itemtype": "property",
            "name": "rows",
            "type": "integer",
            "default": "7",
            "class": "textarea"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50206,
            "itemtype": "property",
            "name": "tpl",
            "default": "<select></select>",
            "class": "select"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50347,
            "itemtype": "property",
            "name": "tpl",
            "default": "<div></div>",
            "class": "checklist"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50353,
            "itemtype": "property",
            "name": "inputclass",
            "type": "string",
            "default": "null",
            "class": "checklist"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50360,
            "description": "Separator of values when reading from `data-value` attribute",
            "itemtype": "property",
            "name": "separator",
            "type": "string",
            "default": "','",
            "class": "checklist"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50407,
            "itemtype": "property",
            "name": "tpl",
            "default": "depends on type",
            "class": "html5types"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50897,
            "itemtype": "property",
            "name": "tpl",
            "default": "<input type=\"hidden\">",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50902,
            "description": "Configuration of select2. [Full list of options](http://ivaynberg.github.com/select2).",
            "itemtype": "property",
            "name": "select2",
            "type": "object",
            "default": "null",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50910,
            "description": "Placeholder attribute of select",
            "itemtype": "property",
            "name": "placeholder",
            "type": "string",
            "default": "null",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50918,
            "description": "Source data for select. It will be assigned to select2 `data` property and kept here just for convenience.\nPlease note, that format is different from simple `select` input: use 'id' instead of 'value'.\nE.g. `[{id: 1, text: \"text1\"}, {id: 2, text: \"text2\"}, ...]`.",
            "itemtype": "property",
            "name": "source",
            "type": "array|string|function",
            "default": "null",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50928,
            "description": "Separator used to display tags.",
            "itemtype": "property",
            "name": "viewseparator",
            "type": "string",
            "default": "', '",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 50942,
            "description": "Combodate - 1.0.5\nDropdown date and time picker.\nConverts text input into dropdowns to pick day, month, year, hour, minute and second.\nUses momentjs as datetime library http://momentjs.com.\nFor i18n include corresponding file from https://github.com/timrwood/moment/tree/master/lang \n\nConfusion at noon and midnight - see http://en.wikipedia.org/wiki/12-hour_clock#Confusion_at_noon_and_midnight\nIn combodate: \n12:00 pm --> 12:00 (24-h format, midday)\n12:00 am --> 00:00 (24-h format, midnight, start of day)\n\nDiffers from momentjs parse rules:\n00:00 pm, 12:00 pm --> 12:00 (24-h format, day not change)\n00:00 am, 12:00 am --> 00:00 (24-h format, day not change)\n\n\nAuthor: Vitaliy Potapov\nProject page: http://github.com/vitalets/combodate\nCopyright (c) 2012 Vitaliy Potapov. Released under MIT License.",
            "class": "select2"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51564,
            "itemtype": "property",
            "name": "tpl",
            "default": "<input type=\"text\">",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51569,
            "itemtype": "property",
            "name": "inputclass",
            "default": "null",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51574,
            "description": "Format used for sending value to server. Also applied when converting date from <code>data-value</code> attribute.<br>\nSee list of tokens in [momentjs docs](http://momentjs.com/docs/#/parsing/string-format)",
            "itemtype": "property",
            "name": "format",
            "type": "string",
            "default": "YYYY-MM-DD",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51583,
            "description": "Format used for displaying date. Also applied when converting date from element's text on init.   \nIf not specified equals to `format`.",
            "itemtype": "property",
            "name": "viewformat",
            "type": "string",
            "default": "null",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51592,
            "description": "Template used for displaying dropdowns.",
            "itemtype": "property",
            "name": "template",
            "type": "string",
            "default": "D / MMM / YYYY",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51600,
            "description": "Configuration of combodate.\nFull list of options: http://vitalets.github.com/combodate/#docs",
            "itemtype": "property",
            "name": "combodate",
            "type": "object",
            "default": "null",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51690,
            "description": "Editable Popover3 (for Bootstrap 3) \n---------------------\nrequires bootstrap-popover.js",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 51747,
            "description": "move popover to new position. This function mainly copied from bootstrap-popover.",
            "class": "combodate"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53340,
            "itemtype": "property",
            "name": "tpl",
            "default": "<div></div>",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53345,
            "itemtype": "property",
            "name": "inputclass",
            "default": "null",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53350,
            "description": "Format used for sending value to server. Also applied when converting date from <code>data-value</code> attribute.<br>\nPossible tokens are: <code>d, dd, m, mm, yy, yyyy</code>",
            "itemtype": "property",
            "name": "format",
            "type": "string",
            "default": "yyyy-mm-dd",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53359,
            "description": "Format used for displaying date. Also applied when converting date from element's text on init.   \nIf not specified equals to <code>format</code>",
            "itemtype": "property",
            "name": "viewformat",
            "type": "string",
            "default": "null",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53368,
            "description": "Configuration of datepicker.\nFull list of options: http://bootstrap-datepicker.readthedocs.org/en/latest/options.html",
            "itemtype": "property",
            "name": "datepicker",
            "type": "object",
            "default": "{\n    weekStart: 0,\n    startView: 0,\n    minViewMode: 0,\n    autoclose: false\n}",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53387,
            "description": "Text shown as clear date button. \nIf <code>false</code> clear button will not be rendered.",
            "itemtype": "property",
            "name": "clear",
            "type": "boolean|string",
            "default": "'x clear'",
            "class": "date"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53461,
            "itemtype": "property",
            "name": "tpl",
            "class": "datefield"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53465,
            "itemtype": "property",
            "name": "inputclass",
            "default": "'input-small'",
            "class": "datefield"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53672,
            "itemtype": "property",
            "name": "tpl",
            "default": "<div></div>",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53677,
            "itemtype": "property",
            "name": "inputclass",
            "default": "null",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53682,
            "description": "Format used for sending value to server. Also applied when converting date from <code>data-value</code> attribute.<br>\nPossible tokens are: <code>d, dd, m, mm, yy, yyyy, h, i</code>",
            "itemtype": "property",
            "name": "format",
            "type": "string",
            "default": "yyyy-mm-dd hh:ii",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53692,
            "description": "Format used for displaying date. Also applied when converting date from element's text on init.   \nIf not specified equals to <code>format</code>",
            "itemtype": "property",
            "name": "viewformat",
            "type": "string",
            "default": "null",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53701,
            "description": "Configuration of datetimepicker.\nFull list of options: https://github.com/smalot/bootstrap-datetimepicker",
            "itemtype": "property",
            "name": "datetimepicker",
            "type": "object",
            "default": "{ }",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53713,
            "description": "Text shown as clear date button. \nIf <code>false</code> clear button will not be rendered.",
            "itemtype": "property",
            "name": "clear",
            "type": "boolean|string",
            "default": "'x clear'",
            "class": "datetime"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53784,
            "itemtype": "property",
            "name": "tpl",
            "class": "datetimefield"
        },
        {
            "file": "dist/js/dependencies.js",
            "line": 53788,
            "itemtype": "property",
            "name": "inputclass",
            "default": "'input-medium'",
            "class": "datetimefield"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1116,
            "description": "Enables row selection (to enable multi selection see also `multiSelect`). Default value is `false`.",
            "itemtype": "property",
            "name": "selection",
            "type": "Boolean",
            "default": "false",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1127,
            "description": "Enables multi selection (`selection` must be set to `true` as well). Default value is `false`.",
            "itemtype": "property",
            "name": "multiSelect",
            "type": "Boolean",
            "default": "false",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1138,
            "description": "Enables entire row click selection (`selection` must be set to `true` as well). Default value is `false`.",
            "itemtype": "property",
            "name": "rowSelect",
            "type": "Boolean",
            "default": "false",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1149,
            "description": "Defines whether the row selection is saved internally on filtering, paging and sorting\n(even if the selected rows are not visible).",
            "itemtype": "property",
            "name": "keepSelection",
            "type": "Boolean",
            "default": "false",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1165,
            "description": "General search settings to configure the search field behaviour.",
            "itemtype": "property",
            "name": "searchSettings",
            "type": "Object",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1174,
            "description": "The time in milliseconds to wait before search gets executed.",
            "itemtype": "property",
            "name": "delay",
            "type": "Number",
            "default": "250",
            "class": "searchSettings"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1184,
            "description": "The characters to type before the search gets executed.",
            "itemtype": "property",
            "name": "characters",
            "type": "Number",
            "default": "1",
            "class": "searchSettings"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1195,
            "description": "Defines whether the data shall be loaded via an asynchronous HTTP (Ajax) request.",
            "itemtype": "property",
            "name": "ajax",
            "type": "Boolean",
            "default": "false",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1205,
            "description": "Ajax request settings that shall be used for server-side communication.\nAll setting except data, error, success and url can be overridden.\nFor the full list of settings go to http://api.jquery.com/jQuery.ajax/.",
            "itemtype": "property",
            "name": "ajaxSettings",
            "type": "Object",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1216,
            "description": "Specifies the HTTP method which shall be used when sending data to the server.\nGo to http://api.jquery.com/jQuery.ajax/ for more details.\nThis setting is overriden for backward compatibility.",
            "itemtype": "property",
            "name": "method",
            "type": "String",
            "default": "\"POST\"",
            "class": "ajaxSettings"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1229,
            "description": "Enriches the request object with additional properties. Either a `PlainObject` or a `Function`\nthat returns a `PlainObject` can be passed. Default value is `{}`.",
            "itemtype": "property",
            "name": "post",
            "type": "Object|Function",
            "default": "function (request) { return request; }",
            "deprecated": true,
            "deprecationMessage": "Use instead `requestHandler`",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1241,
            "description": "Sets the data URL to a data service (e.g. a REST service). Either a `String` or a `Function`\nthat returns a `String` can be passed. Default value is `\"\"`.",
            "itemtype": "property",
            "name": "url",
            "type": "String|Function",
            "default": "\"\"",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1252,
            "description": "Defines whether the search is case sensitive or insensitive.",
            "itemtype": "property",
            "name": "caseSensitive",
            "type": "Boolean",
            "default": "true",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1265,
            "description": "Transforms the JSON request object in whatever is needed on the server-side implementation.",
            "itemtype": "property",
            "name": "requestHandler",
            "type": "Function",
            "default": "function (request) { return request; }",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1276,
            "description": "Transforms the response object into the expected JSON response object.",
            "itemtype": "property",
            "name": "responseHandler",
            "type": "Function",
            "default": "function (response) { return response; }",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1287,
            "description": "A list of converters.",
            "itemtype": "property",
            "name": "converters",
            "type": "Object",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1307,
            "description": "Contains all css classes.",
            "itemtype": "property",
            "name": "css",
            "type": "Object",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1343,
            "description": "CSS class to select the parent div which activates responsive mode.",
            "itemtype": "property",
            "name": "responsiveTable",
            "type": "String",
            "default": "\"table-responsive\"",
            "since": "1.0.0",
            "class": "css"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1360,
            "description": "CSS class to highlight selected rows.",
            "itemtype": "property",
            "name": "selected",
            "type": "String",
            "default": "\"active\"",
            "since": "1.0.0",
            "class": "css"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1375,
            "description": "A dictionary of formatters.",
            "itemtype": "property",
            "name": "formatters",
            "type": "Object",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1385,
            "description": "Specifies the mapping between colorIndex (row.colorIndex) and contextual classes to color rows.",
            "itemtype": "property",
            "name": "colorMapping",
            "type": "Object",
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1394,
            "description": "Specifies a successful or positive action.",
            "itemtype": "property",
            "name": "0",
            "type": "String",
            "class": "colorMapping"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1403,
            "description": "Specifies a neutral informative change or action.",
            "itemtype": "property",
            "name": "1",
            "type": "String",
            "class": "colorMapping"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1412,
            "description": "Specifies a warning that might need attention.",
            "itemtype": "property",
            "name": "2",
            "type": "String",
            "class": "colorMapping"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1421,
            "description": "Specifies a dangerous or potentially negative action.",
            "itemtype": "property",
            "name": "3",
            "type": "String",
            "class": "colorMapping"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1473,
            "description": "Contains all templates.",
            "itemtype": "property",
            "name": "templates",
            "type": "Object",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1546,
            "description": "Appends rows.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "rows",
                    "description": "An array of rows to append",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1571,
            "description": "Removes all rows.",
            "itemtype": "method",
            "name": "clear",
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1592,
            "description": "Removes the control functionality completely and transforms the current state to the initial HTML structure.",
            "itemtype": "method",
            "name": "destroy",
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1610,
            "description": "Resets the state and reloads rows.",
            "itemtype": "method",
            "name": "reload",
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1622,
            "description": "Removes rows by ids. Removes selected rows if no ids are provided.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "rowsIds",
                    "description": "An array of rows ids to remove",
                    "type": "Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1656,
            "description": "Searches in all rows for a specific phrase (but only in visible cells). \nThe search filter will be reset if no argument is provided.",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "phrase",
                    "description": "The phrase to search for",
                    "type": "String",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1675,
            "description": "Selects rows by ids. Selects all visible rows if no ids are provided.\nIn server-side scenarios only visible rows are selectable.",
            "itemtype": "method",
            "name": "select",
            "params": [
                {
                    "name": "rowsIds",
                    "description": "An array of rows ids to select",
                    "type": "Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1728,
            "description": "Deselects rows by ids. Deselects all visible rows if no ids are provided.\nIn server-side scenarios only visible rows are deselectable.",
            "itemtype": "method",
            "name": "deselect",
            "params": [
                {
                    "name": "rowsIds",
                    "description": "An array of rows ids to deselect",
                    "type": "Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1772,
            "description": "Sorts the rows by a given sort descriptor dictionary. \nThe sort filter will be reseted, if no argument is provided.",
            "itemtype": "method",
            "name": "sort",
            "params": [
                {
                    "name": "dictionary",
                    "description": "A sort descriptor dictionary that contains the sort information",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1794,
            "description": "Gets a list of the column settings.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getColumnSettings",
            "return": {
                "description": "Returns a list of the column settings.",
                "type": "Array"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1807,
            "description": "Gets the column settings for the columnId\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getColumnSettings",
            "return": {
                "description": "Returns a list of the column settings.",
                "type": "Array"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1826,
            "description": "Gets the current page index.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getCurrentPage",
            "return": {
                "description": "Returns the current page index.",
                "type": "Number"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1839,
            "description": "Gets the current rows.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getCurrentPage",
            "return": {
                "description": "Returns the current rows.",
                "type": "Array"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1852,
            "description": "Gets a number represents the row count per page.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getRowCount",
            "return": {
                "description": "Returns the row count per page.",
                "type": "Number"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1865,
            "description": "Gets the actual search phrase.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getSearchPhrase",
            "return": {
                "description": "Returns the actual search phrase.",
                "type": "String"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1878,
            "description": "Gets the complete list of currently selected rows.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getSelectedRows",
            "return": {
                "description": "Returns all selected rows.",
                "type": "Array"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1891,
            "description": "Gets the sort dictionary which represents the state of column sorting.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getSortDictionary",
            "return": {
                "description": "Returns the sort dictionary.",
                "type": "Object"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1904,
            "description": "Gets a number represents the total page count.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getTotalPageCount",
            "return": {
                "description": "Returns the total page count.",
                "type": "Number"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1940,
            "description": "Gets a number represents the total row count.\nThis method returns only for the first grid instance a value.\nTherefore be sure that only one grid instance is retrieved by your selector.",
            "itemtype": "method",
            "name": "getTotalRowCount",
            "return": {
                "description": "Returns the total row count.",
                "type": "Number"
            },
            "since": "1.0.0",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 1997,
            "description": "Nova Creator Boostrap Data Grid Extension: editable",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 2153,
            "description": "Nova Creator Boostrap Data Grid Extension: exporter",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 2264,
            "description": "Nova Creator Boostrap Data Grid Extension: filters",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 2863,
            "description": "Nova Creator Boostrap Data Grid Extension: reorder-columns",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 2977,
            "description": "Nova Creator Boostrap Data Grid Extension: reorder-rows",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 3061,
            "description": "Nova Creator Boostrap Data Grid Extension: resizable",
            "class": "defaults"
        },
        {
            "file": "dist/js/novacreator.bootstrap.datagrid.js",
            "line": 3119,
            "description": "Nova Creator Boostrap Data Grid Extension: swipeable",
            "class": "defaults"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:872"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:936"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:1009"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:1021"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:1033"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30424"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30432"
        },
        {
            "message": "unknown tag: memberof",
            "line": " dist/js/dependencies.js:30432"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30497"
        },
        {
            "message": "unknown tag: internal",
            "line": " dist/js/dependencies.js:30697"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30736"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " dist/js/dependencies.js:30810"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30810"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " dist/js/dependencies.js:30825"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30825"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " dist/js/dependencies.js:30837"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30837"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " dist/js/dependencies.js:30850"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:30850"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:30893"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:30998"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31115"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31181"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31202"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31219"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31267"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31337"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31505"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31521"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31536"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31549"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31571"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31625"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31638"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31648"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31662"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31682"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31693"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31703"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31713"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31724"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31734"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31744"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31754"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31767"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31777"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31786"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31796"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31807"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31817"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31831"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31840"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31849"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31869"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31879"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31915"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31943"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31966"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31979"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:31992"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32003"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32018"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32036"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32045"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32059"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32072"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32087"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32098"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32119"
        },
        {
            "message": "unknown tag: inner",
            "line": " dist/js/dependencies.js:32150"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32212"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32229"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32243"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32257"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32271"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32285"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32301"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32315"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32329"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32343"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32356"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32365"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32378"
        },
        {
            "message": "unknown tag: name",
            "line": " dist/js/dependencies.js:32389"
        },
        {
            "message": "unknown tag: license",
            "line": " dist/js/dependencies.js:36442"
        },
        {
            "message": "unknown tag: preserve",
            "line": " dist/js/dependencies.js:46947"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " dist/js/dependencies.js:48295"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " dist/js/dependencies.js:48952"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:48968"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:48990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:49023"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:49373"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:49384"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:49395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dist/js/dependencies.js:49406"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " dist/js/dependencies.js:872"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " dist/js/dependencies.js:892"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " dist/js/dependencies.js:901"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " dist/js/dependencies.js:922"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " dist/js/dependencies.js:936"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " dist/js/dependencies.js:965"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " dist/js/dependencies.js:976"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " dist/js/dependencies.js:987"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " dist/js/dependencies.js:1009"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " dist/js/dependencies.js:1021"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " dist/js/dependencies.js:1033"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " dist/js/dependencies.js:1471"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " dist/js/dependencies.js:1504"
        },
        {
            "message": "Missing item type\nA low-level selection function that works with Sizzle's compiled\n selector functions",
            "line": " dist/js/dependencies.js:2534"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " dist/js/dependencies.js:3546"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " dist/js/dependencies.js:5586"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " dist/js/dependencies.js:5605"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " dist/js/dependencies.js:9391"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " dist/js/dependencies.js:9487"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:19847"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:19848"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:19849"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20051"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20052"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20053"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20397"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20398"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:20399"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26792"
        },
        {
            "message": "Missing item type\nTableDnD plug-in for JQuery, allows you to drag and drop table rows\nYou can set up various options to control how the system will work\nCopyright (c) Denis Howlett <denish@isocra.com>\nLicensed like jQuery, see http://docs.jquery.com/License.\n\nConfiguration options:\n\nonDragStyle\n    This is the style that is assigned to the row during drag. There are limitations to the styles that can be\n    associated with a row (such as you can't assign a border--well you can, but it won't be\n    displayed). (So instead consider using onDragClass.) The CSS style to apply is specified as\n    a map (as used in the jQuery css(...) function).\nonDropStyle\n    This is the style that is assigned to the row when it is dropped. As for onDragStyle, there are limitations\n    to what you can do. Also this replaces the original style, so again consider using onDragClass which\n    is simply added and then removed on drop.\nonDragClass\n    This class is added for the duration of the drag and then removed when the row is dropped. It is more\n    flexible than using onDragStyle since it can be inherited by the row cells and other content. The default\n    is class is tDnD_whileDrag. So to use the default, simply customise this CSS class in your\n    stylesheet.\nonDrop\n    Pass a function that will be called when the row is dropped. The function takes 2 parameters: the table\n    and the row that was dropped. You can work out the new order of the rows by using\n    table.rows.\nonDragStart\n    Pass a function that will be called when the user starts dragging. The function takes 2 parameters: the\n    table and the row which the user has started to drag.\nonAllowDrop\n    Pass a function that will be called as a row is over another row. If the function returns true, allow\n    dropping on that row, otherwise not. The function takes 2 parameters: the dragged row and the row under\n    the cursor. It returns a boolean: true allows the drop, false doesn't allow it.\nscrollAmount\n    This is the number of pixels to scroll if the user moves the mouse cursor to the top or bottom of the\n    window. The page should automatically scroll up or down as appropriate (tested in IE6, IE7, Safari, FF2,\n    FF3 beta\ndragHandle\n    This is a jQuery mach string for one or more cells in each row that is draggable. If you\n    specify this, then you are responsible for setting cursor: move in the CSS and only these cells\n    will have the drag behaviour. If you do not specify a dragHandle, then you get the old behaviour where\n    the whole row is draggable.\n\nOther ways to control behaviour:\n\nAdd class=\"nodrop\" to any rows for which you don't want to allow dropping, and class=\"nodrag\" to any rows\nthat you don't want to be draggable.\n\nInside the onDrop method you can also call $.tableDnD.serialize() this returns a string of the form\n<tableID>[]=<rowID1>&<tableID>[]=<rowID2> so that you can send this back to the server. The table must have\nan ID as must all the rows.\n\nOther methods:\n\n$(\"...\").tableDnDUpdate()\nWill update all the matching tables, that is it will reapply the mousedown method to the rows (or handle cells).\nThis is useful if you have updated the table rows using Ajax and you want to make the table draggable again.\nThe table maintains the original configuration (so you don't have to specify it again).\n\n$(\"...\").tableDnDSerialize()\nWill serialize and return the serialized string as above, but for each of the matching tables--so it can be\ncalled from anywhere and isn't dependent on the currentTable being set up correctly before calling\n\nKnown problems:\n- Auto-scoll has some problems with IE7  (it scrolls even when it shouldn't), work-around: set scrollAmount to 0\n\nVersion 0.2: 2008-02-20 First public version\nVersion 0.3: 2008-02-07 Added onDragStart option\n                        Made the scroll amount configurable (default is 5 as before)\nVersion 0.4: 2008-03-15 Changed the noDrag/noDrop attributes to nodrag/nodrop classes\n                        Added onAllowDrop to control dropping\n                        Fixed a bug which meant that you couldn't set the scroll amount in both directions\n                        Added serialize method\nVersion 0.5: 2008-05-16 Changed so that if you specify a dragHandle class it doesn't make the whole row\n                        draggable\n                        Improved the serialize method to use a default (and settable) regular expression.\n                        Added tableDnDupate() and tableDnDSerialize() to be called when you are outside the table\nVersion 0.6: 2011-12-02 Added support for touch devices\nVersion 0.7  2012-04-09 Now works with jQuery 1.7 and supports touch, tidied up tabs and spaces\nVERSION MCM  2016-07-09 Modified currentOrder",
            "line": " dist/js/dependencies.js:26837"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26969"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26971"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26973"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26975"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26979"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26993"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26995"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26997"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:26999"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27001"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27003"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27005"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27007"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27009"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27065"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27124"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27143"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27159"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:27310"
        },
        {
            "message": "Missing item type\n_ _____           _          _     _      \n              | |  __ \\         (_)        | |   | |     \n      ___ ___ | | |__) |___  ___ _ ______ _| |__ | | ___ \n     / __/ _ \\| |  _  // _ \\/ __| |_  / _` | '_ \\| |/ _ \\\n    | (_| (_) | | | \\ \\  __/\\__ \\ |/ / (_| | |_) | |  __/\n     \\___\\___/|_|_|  \\_\\___||___/_/___\\__,_|_.__/|_|\\___|\n\t \n\tv1.6 - jQuery plugin created by Alvaro Prieto Lauroba\n\t\n\tLicences: MIT & GPL\n\tFeel free to use or modify this plugin as far as my full name is kept\t\n\t\n\tIf you are going to use this plug-in in production environments it is \n\tstrongly recommended to use its minified version: colResizable.min.js",
            "line": " dist/js/dependencies.js:29876"
        },
        {
            "message": "Missing item type\nFunction to allow column resizing for table objects. It is the starting point to apply the plugin.",
            "line": " dist/js/dependencies.js:29919"
        },
        {
            "message": "Missing item type\nThis function allows to remove any enhancements performed by this plugin on a previously processed table.",
            "line": " dist/js/dependencies.js:29947"
        },
        {
            "message": "Missing item type\nFunction to create all the grips associated with the table given by parameters",
            "line": " dist/js/dependencies.js:29959"
        },
        {
            "message": "Missing item type\nFunction to allow the persistence of columns dimensions after a browser postback. It is based in\nthe HTML5 sessionStorage object, which can be emulated for older browsers using sessionstorage.js",
            "line": " dist/js/dependencies.js:30009"
        },
        {
            "message": "Missing item type\nFunction that places each grip in the correct position according to the current table layout",
            "line": " dist/js/dependencies.js:30049"
        },
        {
            "message": "Missing item type\nThis function updates column's width according to the horizontal position increment of the grip being\ndragged. The function can be called while dragging if liveDragging is enabled and also from the onGripDragOver\nevent handler to synchronize grip's position with their related columns.",
            "line": " dist/js/dependencies.js:30066"
        },
        {
            "message": "Missing item type\nThis function updates all columns width according to its real width. It must be taken into account that the \nsum of all columns can exceed the table width in some cases (if fixed is set to false and table has some kind \nof max-width).",
            "line": " dist/js/dependencies.js:30092"
        },
        {
            "message": "Missing item type\nEvent handler used while dragging a grip. It checks if the next grip's position is valid and updates it.",
            "line": " dist/js/dependencies.js:30110"
        },
        {
            "message": "Missing item type\nEvent handler fired when the dragging is over, updating table layout",
            "line": " dist/js/dependencies.js:30154"
        },
        {
            "message": "Missing item type\nEvent handler fired when the grip's dragging is about to start. Its main goal is to set up events \nand store some values used while dragging.",
            "line": " dist/js/dependencies.js:30185"
        },
        {
            "message": "Missing item type\nEvent handler fired when the browser is resized. The main purpose of this function is to update\ntable layout according to the browser's size synchronizing related grips",
            "line": " dist/js/dependencies.js:30207"
        },
        {
            "message": "Missing item type\nThe plugin is added to the jQuery library",
            "line": " dist/js/dependencies.js:30243"
        },
        {
            "message": "Missing item type\nThe version of the plugin",
            "line": " dist/js/dependencies.js:30607"
        },
        {
            "message": "Missing item type\nInitialise the plugin for each DOM element matched\nThis creates a new instance of the main TouchSwipe class for each DOM element, and then\nsaves a reference to that instance in the elements data property.",
            "line": " dist/js/dependencies.js:30697"
        },
        {
            "message": "Missing item type\nEvent handler for a touch start event.\nStops the default click event from triggering and stores where we touched",
            "line": " dist/js/dependencies.js:30893"
        },
        {
            "message": "Missing item type\nEvent handler for a touch move event.\nIf we change fingers during move, then cancel the event",
            "line": " dist/js/dependencies.js:30998"
        },
        {
            "message": "Missing item type\nEvent handler for a touch end event.\nCalculate the direction and trigger events",
            "line": " dist/js/dependencies.js:31115"
        },
        {
            "message": "Missing item type\nEvent handler for a touch cancel event.\nClears current vars",
            "line": " dist/js/dependencies.js:31181"
        },
        {
            "message": "Missing item type\nEvent handler for a touch leave event.\nThis is only triggered on desktops, in touch we work this out manually\nas the touchleave event is not supported in webkit",
            "line": " dist/js/dependencies.js:31202"
        },
        {
            "message": "Missing item type\nRemoves all listeners that were associated with the plugin",
            "line": " dist/js/dependencies.js:31219"
        },
        {
            "message": "Missing item type\nChecks if the time and distance thresholds have been met, and if so then the appropriate handlers are fired.",
            "line": " dist/js/dependencies.js:31238"
        },
        {
            "message": "Missing item type\nTrigger the relevant event handler\nThe handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, \"left\", \"right\", \"up\", or \"down\"",
            "line": " dist/js/dependencies.js:31267"
        },
        {
            "message": "Missing item type\nTrigger the relevant event handler\nThe handlers are passed the original event, the element that was swiped, and in the case of the catch all handler, the direction that was swiped, \"left\", \"right\", \"up\", or \"down\"",
            "line": " dist/js/dependencies.js:31337"
        },
        {
            "message": "Missing item type\nChecks the user has swipe far enough",
            "line": " dist/js/dependencies.js:31505"
        },
        {
            "message": "Missing item type\nChecks the user has swiped back to cancel.",
            "line": " dist/js/dependencies.js:31521"
        },
        {
            "message": "Missing item type\nChecks the user has pinched far enough",
            "line": " dist/js/dependencies.js:31536"
        },
        {
            "message": "Missing item type\nChecks that the time taken to swipe meets the minimum / maximum requirements",
            "line": " dist/js/dependencies.js:31549"
        },
        {
            "message": "Missing item type\nChecks direction of the swipe and the value allowPageScroll to see if we should allow or prevent the default behaviour from occurring.\nThis will essentially allow page scrolling or not when the user is swiping on a touchSwipe object.",
            "line": " dist/js/dependencies.js:31571"
        },
        {
            "message": "Missing item type\nReturns true of the current pinch meets the thresholds",
            "line": " dist/js/dependencies.js:31625"
        },
        {
            "message": "Missing item type\nReturns true if any Pinch events have been registered",
            "line": " dist/js/dependencies.js:31638"
        },
        {
            "message": "Missing item type\nReturns true if we are detecting pinches, and have one",
            "line": " dist/js/dependencies.js:31648"
        },
        {
            "message": "Missing item type\nReturns true if the current swipe meets the thresholds",
            "line": " dist/js/dependencies.js:31662"
        },
        {
            "message": "Missing item type\nReturns true if any Swipe events have been registered",
            "line": " dist/js/dependencies.js:31682"
        },
        {
            "message": "Missing item type\nReturns true if we are detecting swipes and have one",
            "line": " dist/js/dependencies.js:31693"
        },
        {
            "message": "Missing item type\nReturns true if we have matched the number of fingers we are looking for",
            "line": " dist/js/dependencies.js:31703"
        },
        {
            "message": "Missing item type\nReturns true if we have an end point for the swipe",
            "line": " dist/js/dependencies.js:31713"
        },
        {
            "message": "Missing item type\nReturns true if a click / tap events have been registered",
            "line": " dist/js/dependencies.js:31724"
        },
        {
            "message": "Missing item type\nReturns true if a double tap events have been registered",
            "line": " dist/js/dependencies.js:31734"
        },
        {
            "message": "Missing item type\nReturns true if any long tap events have been registered",
            "line": " dist/js/dependencies.js:31744"
        },
        {
            "message": "Missing item type\nReturns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.",
            "line": " dist/js/dependencies.js:31754"
        },
        {
            "message": "Missing item type\nReturns true if we could be in the process of a double tap (one tap has occurred, we are listening for double taps, and the threshold hasn't past.",
            "line": " dist/js/dependencies.js:31767"
        },
        {
            "message": "Missing item type\nReturns true if we have a valid tap",
            "line": " dist/js/dependencies.js:31777"
        },
        {
            "message": "Missing item type\nReturns true if we have a valid long tap",
            "line": " dist/js/dependencies.js:31786"
        },
        {
            "message": "Missing item type\nReturns true if we are detecting taps and have one",
            "line": " dist/js/dependencies.js:31796"
        },
        {
            "message": "Missing item type\nReturns true if we are detecting double taps and have one",
            "line": " dist/js/dependencies.js:31807"
        },
        {
            "message": "Missing item type\nReturns true if we are detecting long taps and have one",
            "line": " dist/js/dependencies.js:31817"
        },
        {
            "message": "Missing item type\nStarts tracking the time between 2 finger releases, and keeps track of how many fingers we initially had up",
            "line": " dist/js/dependencies.js:31831"
        },
        {
            "message": "Missing item type\nCancels the tracking of time between 2 finger releases, and resets counters",
            "line": " dist/js/dependencies.js:31840"
        },
        {
            "message": "Missing item type\nChecks if we are in the threshold between 2 fingers being released",
            "line": " dist/js/dependencies.js:31849"
        },
        {
            "message": "Missing item type\ngets a data flag to indicate that a touch is in progress",
            "line": " dist/js/dependencies.js:31869"
        },
        {
            "message": "Missing item type\nSets a data flag to indicate that a touch is in progress",
            "line": " dist/js/dependencies.js:31879"
        },
        {
            "message": "Missing item type\nCreates the finger data for the touch/finger in the event object.",
            "line": " dist/js/dependencies.js:31915"
        },
        {
            "message": "Missing item type\nUpdates the finger data for a particular event object",
            "line": " dist/js/dependencies.js:31943"
        },
        {
            "message": "Missing item type\nReturns a finger data object by its event ID.\nEach touch event has an identifier property, which is used\nto track repeat touches",
            "line": " dist/js/dependencies.js:31966"
        },
        {
            "message": "Missing item type\nSets the maximum distance swiped in the given direction.\nIf the new value is lower than the current value, the max value is not changed.",
            "line": " dist/js/dependencies.js:31979"
        },
        {
            "message": "Missing item type\ngets the maximum distance swiped in the given direction.",
            "line": " dist/js/dependencies.js:31992"
        },
        {
            "message": "Missing item type\nCreats a map of directions to maximum swiped values.",
            "line": " dist/js/dependencies.js:32003"
        },
        {
            "message": "Missing item type\nCreates a map maximum swiped values for a given swipe direction",
            "line": " dist/js/dependencies.js:32018"
        },
        {
            "message": "Missing item type\nCalculate the duration of the swipe",
            "line": " dist/js/dependencies.js:32036"
        },
        {
            "message": "Missing item type\nCalculate the distance between 2 touches (pinch)",
            "line": " dist/js/dependencies.js:32045"
        },
        {
            "message": "Missing item type\nCalculate the zoom factor between the start and end distances",
            "line": " dist/js/dependencies.js:32059"
        },
        {
            "message": "Missing item type\nReturns the pinch direction, either IN or OUT for the given points",
            "line": " dist/js/dependencies.js:32072"
        },
        {
            "message": "Missing item type\nCalculate the length / distance of the swipe",
            "line": " dist/js/dependencies.js:32087"
        },
        {
            "message": "Missing item type\nCalculate the angle of the swipe",
            "line": " dist/js/dependencies.js:32098"
        },
        {
            "message": "Missing item type\nCalculate the direction of the swipe\nThis will also call calculateAngle to get the latest angle of swipe",
            "line": " dist/js/dependencies.js:32119"
        },
        {
            "message": "Missing item type\nReturns a MS time stamp of the current time",
            "line": " dist/js/dependencies.js:32150"
        },
        {
            "message": "Missing item type\nReturns a bounds object with left, right, top and bottom properties for the element specified.",
            "line": " dist/js/dependencies.js:32162"
        },
        {
            "message": "Missing item type\nChecks if the point object is in the bounds object.",
            "line": " dist/js/dependencies.js:32181"
        },
        {
            "message": "Missing item type\nChecks if the two points are equal",
            "line": " dist/js/dependencies.js:32196"
        },
        {
            "message": "Missing item type",
            "line": " dist/js/dependencies.js:36442"
        },
        {
            "message": "Missing item type\njsPDF - PDF Document creation from JavaScript\nVersion 1.0.272-git Built on 2014-09-29T15:09\n                          CommitID d4770725ca\n\nCopyright (c) 2010-2014 James Hall, https://github.com/MrRio/jsPDF\n              2010 Aaron Spike, https://github.com/acspike\n              2012 Willow Systems Corporation, willow-systems.com\n              2012 Pablo Hess, https://github.com/pablohess\n              2012 Florian Jenett, https://github.com/fjenett\n              2013 Warren Weckesser, https://github.com/warrenweckesser\n              2013 Youssef Beddad, https://github.com/lifof\n              2013 Lee Driscoll, https://github.com/lsdriscoll\n              2013 Stefan Slonevskiy, https://github.com/stefslon\n              2013 Jeremy Morel, https://github.com/jmorel\n              2013 Christoph Hartmann, https://github.com/chris-rock\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 James Makes, https://github.com/dollaruw\n              2014 Diego Casorran, https://github.com/diegocr\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nContributor(s):\n   siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\n   kim3er, mfo, alnorth,",
            "line": " dist/js/dependencies.js:46776"
        },
        {
            "message": "Missing item type\njsPDF addHTML PlugIn\nCopyright (c) 2014 Diego Casorran\nLicensed under the MIT License.\nhttp://opensource.org/licenses/mit-license",
            "line": " dist/js/dependencies.js:46819"
        },
        {
            "message": "Missing item type\njsPDF addImage plugin\nCopyright (c) 2012 Jason Siefken, https://github.com/siefkenj/\n              2013 Chris Dowling, https://github.com/gingerchris\n              2013 Trinh Ho, https://github.com/ineedfat\n              2013 Edwin Alejandro Perez, https://github.com/eaparango\n              2013 Norah Smith, https://github.com/burnburnrocket\n              2014 Diego Casorran, https://github.com/diegocr\n              2014 James Robb, https://github.com/jamesbrobb",
            "line": " dist/js/dependencies.js:46825"
        },
        {
            "message": "Missing item type\njsPDF Cell plugin\nCopyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com\n              2013 Eduardo Menezes de Morais, eduardo.morais@usp.br\n              2013 Lee Driscoll, https://github.com/lsdriscoll\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 James Hall, james@parall.ax\n              2014 Diego Casorran, https://github.com/diegocr",
            "line": " dist/js/dependencies.js:46835"
        },
        {
            "message": "Missing item type\njsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\n              2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n              2014 Diego Casorran, https://github.com/diegocr\n              2014 Daniel Husar, https://github.com/danielhusar\n              2014 Wolfgang Gassler, https://github.com/woolfg",
            "line": " dist/js/dependencies.js:46844"
        },
        {
            "message": "Missing item type\njsPDF JavaScript plugin\nCopyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com",
            "line": " dist/js/dependencies.js:46852"
        },
        {
            "message": "Missing item type\njsPDF PNG PlugIn\nCopyright (c) 2014 James Robb, https://github.com/jamesbrobb",
            "line": " dist/js/dependencies.js:46856"
        },
        {
            "message": "Missing item type\njsPDF Silly SVG plugin\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com",
            "line": " dist/js/dependencies.js:46860"
        },
        {
            "message": "Missing item type\njsPDF split_text_to_size plugin - MIT license.\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\n              2014 Diego Casorran, https://github.com/diegocr",
            "line": " dist/js/dependencies.js:46864"
        },
        {
            "message": "Missing item type\njsPDF standard_fonts_metrics plugin\nCopyright (c) 2012 Willow Systems Corporation, willow-systems.com\nMIT license.",
            "line": " dist/js/dependencies.js:46869"
        },
        {
            "message": "Missing item type\njsPDF total_pages plugin\nCopyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br",
            "line": " dist/js/dependencies.js:46874"
        },
        {
            "message": "Missing item type\nJavaScript Polyfill functions for jsPDF\nCollected from public resources by\nhttps://github.com/diegocr",
            "line": " dist/js/dependencies.js:46938"
        },
        {
            "message": "Missing item type\njsPDF AutoTable plugin v2.0.14\nCopyright (c) 2014 Simon Bengtsson, https://github.com/simonbengtsson/jsPDF-AutoTable\n\nLicensed under the MIT License.\nhttp://opensource.org/licenses/mit-license",
            "line": " dist/js/dependencies.js:46947"
        },
        {
            "message": "Missing item type\nEditableForm utilites",
            "line": " dist/js/dependencies.js:47637"
        },
        {
            "message": "Missing item type\nclassic JS inheritance function",
            "line": " dist/js/dependencies.js:47645"
        },
        {
            "message": "Missing item type\nset caret position in input\nsee http://stackoverflow.com/questions/499126/jquery-set-cursor-position-in-text-area",
            "line": " dist/js/dependencies.js:47656"
        },
        {
            "message": "Missing item type\nfunction to parse JSON in *single* quotes. (jquery automatically parse only double quotes)\nThat allows such code as: <a data-source=\"{'a': 'b', 'c': 'd'}\">\nsafe = true --> means no exception will be thrown\nfor details see http://stackoverflow.com/questions/7410348/how-to-set-json-format-to-html5-data-attributes-in-the-jquery",
            "line": " dist/js/dependencies.js:47672"
        },
        {
            "message": "Missing item type\nslice object by specified keys",
            "line": " dist/js/dependencies.js:47697"
        },
        {
            "message": "Missing item type\nmethod to escape html.",
            "line": " dist/js/dependencies.js:47763"
        },
        {
            "message": "Missing item type\nEditable Inline \n---------------------",
            "line": " dist/js/dependencies.js:48403"
        },
        {
            "message": "Missing item type\nmethod to escape html.",
            "line": " dist/js/dependencies.js:49456"
        },
        {
            "message": "Missing item type\nattach handler to automatically submit form when value changed (useful when buttons not shown)",
            "line": " dist/js/dependencies.js:49463"
        },
        {
            "message": "Missing item type\nAdditional actions when destroying element",
            "line": " dist/js/dependencies.js:49470"
        },
        {
            "message": "Missing item type\nconvert data to array suitable for sourceData, e.g. [{value: 1, text: 'abc'}, {...}]",
            "line": " dist/js/dependencies.js:49750"
        },
        {
            "message": "Missing item type\nCombodate - 1.0.5\nDropdown date and time picker.\nConverts text input into dropdowns to pick day, month, year, hour, minute and second.\nUses momentjs as datetime library http://momentjs.com.\nFor i18n include corresponding file from https://github.com/timrwood/moment/tree/master/lang \n\nConfusion at noon and midnight - see http://en.wikipedia.org/wiki/12-hour_clock#Confusion_at_noon_and_midnight\nIn combodate: \n12:00 pm --> 12:00 (24-h format, midday)\n12:00 am --> 00:00 (24-h format, midnight, start of day)\n\nDiffers from momentjs parse rules:\n00:00 pm, 12:00 pm --> 12:00 (24-h format, day not change)\n00:00 am, 12:00 am --> 00:00 (24-h format, day not change)\n\n\nAuthor: Vitaliy Potapov\nProject page: http://github.com/vitalets/combodate\nCopyright (c) 2012 Vitaliy Potapov. Released under MIT License.",
            "line": " dist/js/dependencies.js:50942"
        },
        {
            "message": "Missing item type\nEditable Popover3 (for Bootstrap 3) \n---------------------\nrequires bootstrap-popover.js",
            "line": " dist/js/dependencies.js:51690"
        },
        {
            "message": "Missing item type\nmove popover to new position. This function mainly copied from bootstrap-popover.",
            "line": " dist/js/dependencies.js:51747"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: editable",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:1997"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: exporter",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:2153"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: filters",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:2264"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: reorder-columns",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:2863"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: reorder-rows",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:2977"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: resizable",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:3061"
        },
        {
            "message": "Missing item type\nNova Creator Boostrap Data Grid Extension: swipeable",
            "line": " dist/js/novacreator.bootstrap.datagrid.js:3119"
        }
    ]
}